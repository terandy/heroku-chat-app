{"version":3,"sources":["Components/Home/FormStyle.jsx","Components/Home/Login.jsx","Components/Messenger/MsgDisplay.jsx","Components/Messenger/SearchBarStyle.jsx","Components/Messenger/ConvoList.jsx","Components/Messenger/MsgDetail.jsx","Components/Messenger/MsgInputStyle.jsx","Components/Messenger/MsgInput.jsx","Components/Messenger/Messenger.jsx","Components/Video/VideoChatStyles.jsx","Components/Video/Popup.jsx","Components/Video/VideoChat.jsx","Components/Profile/profileStyle.jsx","Components/Profile/Profile.jsx","Components/Profile/OtherProfile.jsx","Components/Active/DiscoverStyled.jsx","Components/Active/Discover.jsx","Components/Slider/ImageSliderStyle.jsx","Components/Slider/ImageSlider.jsx","Components/Home/Home.jsx","data.js","Components/Home/Register.jsx","Components/Navbar/SideNav.jsx","Components/Home/Logout.jsx","Components/Navbar/TopNav.jsx","App.jsx","store.js","index.js"],"names":["Title","styled","div","Form","form","props","propsDisplay","E","socket","io","window","location","origin","autoConnect","Login","history","useHistory","dispatch","useDispatch","useState","loginEmail","loginEmailChange","loginPw","loginPwChange","errorMessage","errChange","submitHandler","evt","a","preventDefault","data","FormData","append","fetch","method","body","responseBody","text","responseText","response","JSON","parse","success","type","content","userInfo","activeUsers","convoList","convoUsers","connect","emit","push","onSubmit","htmlFor","id","required","autoComplete","value","onChange","target","MsgDisplayStyle","Container","me","TextBubble","Sender","notYet","TimeStyle","DayStyle","MsgDisplay","containerRef","useRef","convoID","convo","useSelector","state","conversations","myID","email","useEffect","current","scrollTo","scrollHeight","ref","messages","map","msg","index","sender","time","day","Date","getDay","timeBefore","senderBefore","dayBefore","timeDistance","key","toDateString","toLocaleTimeString","hour","hour12","minute","alt","src","imgSrc","MyInfo","ListStyle","active","notify","ConvoList","loggedIn","login","currentConvo","fname","lname","activeMembers","notifications","filter","setFilter","className","to","style","textDecoration","placeholder","Object","keys","userID","label","name","toUpperCase","includes","onClick","left","innerWidth","behavior","getConvo","VideoChat","MsgDetail","thisConvoID","members","otherMembers","user","_id","MsgInputStyle","MsgInput","formRef","msgContent","setMsgContent","rows","onKeyDown","keyCode","Div","MsgViewStyle","MsgView","Messenger","height","width","objectFit","LilVid","size","VideoChatPage","PopupStyle","show","Popup","setShow","setTimeout","person","activeUsersRef","meRef","peers","videoChatInitiator","lilVidSize","setlilVidSize","setContent","setPerson","myStream","setMyStream","otherStream","setOtherStream","peer","setPeer","navigator","mediaDevices","getUserMedia","video","audio","then","stream","Peer","initiator","trickle","on","stringify","offerData","offerer","answerer","signal","decliner","autoPlay","vid","srcObject","muted","confirm","getTracks","val","stop","off","destroy","Form1","displayInfo","Cancel","disapear","Info","Img1","img","Img2","EditPencil","BackgroundImg","ProfileImg","Profile","fnameChange","lnameChange","emailChange","description","descriptionChange","hoverImg","hoverImgChange","displayInfoChange","hoverImgDisapear","hoverImgDisapearChange","profileSubmit","imgSubmit","files","console","log","onMouseEnter","onMouseLeave","ProfileImg2","Button","OtherProfile","chatSrcImg","changeChatSrcImg","otherUserInfo","myInfo","startConvo","users","forEach","new","H1","ActiveUserStyle","SearchUserStyle","ContactUserStyle","ContactCover","Container2","Discover","searchInput","setSearchInput","errorMsg","setErrorMsg","searchResults","setSearchResults","viewProfile","path","results","length","SliderContainer","ImgDiv","position","LeftArrow","toggle","RightArrow","ImgBall","bc","ImgBalls","Slide","slideStyle","imgPath","color","ImageSlider","componentDidUpdate","prevProps","mainImage","setState","displayArrows","shiftLeft","shiftRight","slides","this","slide","title","title2","Component","Home","Register","pw","pwChange","confirmPw","confirmPwChange","errMsg","errMsgChange","SideNavStyle","logggedIn","videoChatMode","SideNav","useLocation","setNotify","values","some","x","pathname","slice","Logout","logoutHandler","disconnect","SidePop","Nav","SIDE_BAR_WIDTH","Click","Exit","Outer","Navbar","loginDisplay","setLoginDisplay","registerDisplay","setRegisterDisplay","toggleBoth","MainContainer","Main","TOP_BAR_HEIGHT","App","mainRef","videoChatInvite","convosRef","arrayOfMemberInfo","arrayOfUsersInfo","getMessageFunction","start","checkCookies","TopNav","messenger","href","exact","render","renderData","match","params","mid","renderVideoChat","scroll","scrollWidth","right","renderMessenger","renderViewProfile","initialState","store","createStore","action","produce","newState","ac","member","info","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2889d79a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n//Styling\nlet Title = styled.div`\n  text-align: left;\n  padding: 1em 0;\n  h1 {\n    font-weight: lighter;\n    font-size: 1.5em;\n    color: rgb(0, 57, 70);\n  }\n`;\n\nconst Form = styled.form`\n  font-family: sans-serif;\n  padding: 2em;\n  display: ${props => props.propsDisplay};\n  background-color: white;\n  flex-direction: column;\n  & > * {\n    width: 100%;\n  }\n  .row {\n    flex-direction: row;\n    display: flex;\n    justify-content: space-between;\n    & > div {\n      width: 47%;\n    }\n  }\n\n  div {\n    display: ${props => props.propsDisplay};\n    flex-direction: column;\n    margin: 0.5em 0;\n\n    & > * {\n      margin: 0.1em 0;\n      &:focus {\n        outline: none;\n      }\n    }\n    input {\n      box-sizing: border-box;\n      font-size: 0.75em;\n      padding: 0.75em;\n      border: 1px solid lightgrey;\n      width: 100%;\n      &:hover {\n        border: 1px solid rgb(234, 171, 0);\n      }\n      &:focus {\n        background-color: rgb(250, 242, 232);\n        border: 1px solid rgb(234, 171, 0);\n      }\n    }\n    label {\n      font-size: 0.5em;\n    }\n  }\n  button {\n    width: 100%;\n    background-color: rgb(234, 171, 0);\n    border: none;\n    color: rgb(0, 57, 70);\n    font-size: 0.75em;\n    padding: 0.8em;\n    margin: 1.5em 0;\n    &:focus {\n      outline: none;\n      background-color: lightgrey;\n    }\n    &:hover {\n      background-color: lightgrey;\n      cursor: pointer;\n    }\n  }\n`;\n\nlet E = styled.div`\n  color: red;\n  font-size: 0.75em;\n`;\n\nexport default Form;\nexport { Title, E };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Form, { Title, E } from './FormStyle.jsx';\nimport io from 'socket.io-client';\nconst socket = io(window.location.origin, {\n  autoConnect: false\n});\n\nlet Login = props => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [loginEmail, loginEmailChange] = useState('');\n  const [loginPw, loginPwChange] = useState('');\n  const [errorMessage, errChange] = useState('');\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    let data = new FormData();\n    data.append('email', loginEmail);\n    data.append('pw', loginPw);\n    let responseBody = await fetch('/login', { method: 'POST', body: data });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({\n        type: 'login',\n        content: {\n          userInfo: response.userInfo,\n          activeUsers: response.activeUsers,\n          convoList: response.convoList,\n          convoUsers: response.convoUsers\n        }\n      });\n      socket.connect();\n      socket.emit('login', response.userInfo);\n      history.push('/');\n    } else {\n      errChange(response.errorMessage);\n    }\n  };\n  return (\n    <Form onSubmit={submitHandler}>\n      <Title>\n        <h1>Sign in</h1>\n      </Title>\n      <div>\n        <label htmlFor=\"loginEmail\">Email</label>\n        <input\n          type=\"text\"\n          id=\"loginEmail\"\n          required\n          autoComplete=\"on\"\n          value={loginEmail}\n          onChange={evt => {\n            loginEmailChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"loginPw\">Password</label>\n        <input\n          type=\"password\"\n          id=\"loginPw\"\n          required\n          autoComplete=\"off\"\n          value={loginPw}\n          onChange={evt => {\n            loginPwChange(evt.target.value);\n          }}\n        />\n      </div>\n\n      <button>Sign in</button>\n      <E>{errorMessage}</E>\n    </Form>\n  );\n};\n\nexport default Login;\nexport { socket };\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nlet MsgDisplayStyle = styled.div`\n  overflow: scroll;\n  padding: 00.5em;\n`;\nlet Container = styled.div`\n  text-align: ${props => (props.me ? 'right ' : 'left')};\n  align-content: ${props => (props.me ? 'right ' : 'left')};\n`;\nlet TextBubble = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: ${props => (props.me ? 'flex-end' : 'flex-start')};\n  div {\n    background-color: ${props => (props.me ? 'lightgrey' : 'purple')};\n    color: ${props => (props.me ? 'black' : 'white')};\n    padding: 1em;\n    width: max-content;\n    min-width: 25px;\n    max-width: 75%;\n    border-radius: ${props =>\n      props.me ? '1.5em 1.5em 0 1.5em' : '1.5em 1.5em 1.5em 0'};\n    text-align: left;\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    margin-left: 2.5em;\n  }\n`;\nlet Sender = styled.div`\n  position: relative;\n  img {\n    display: ${props => (props.me || props.notYet ? 'none' : 'block')};\n    position: absolute;\n    top: 1em;\n    left: 0;\n    height: 2em;\n    width: 2em;\n    border-radius: 50%;\n    object-fit: cover;\n    margin-right: 1em;\n  }\n`;\n\nlet TimeStyle = styled.div`\n  color: grey;\n  text-align: center;\n  display: ${props => (props.notYet ? 'none' : 'block')};\n`;\nlet DayStyle = styled(TimeStyle)`\n  padding: 1em 0;\n`;\nlet MsgDisplay = props => {\n  let containerRef = useRef();\n  let convoID = props.convoID;\n  let convo = useSelector(state => state.conversations[convoID]);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let myID = useSelector(state => state.userInfo.email);\n  useEffect(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollTo(0, containerRef.current.scrollHeight);\n    }\n  }, [convo]);\n  if (!convo) {\n    return <div></div>;\n  }\n  return (\n    <MsgDisplayStyle ref={containerRef}>\n      {convo.messages.map((msg, index) => {\n        let me = myID === msg.sender;\n        let notYet = { time: true, day: true, sender: true };\n        let time = new Date(msg.time);\n        let day = time.getDay();\n        let timeBefore =\n          index === 0 ? 0 : new Date(convo.messages[index - 1].time);\n        let senderBefore = index === 0 ? 0 : convo.messages[index - 1].sender;\n        let dayBefore = index === 0 ? 0 : timeBefore.getDay();\n        let timeDistance = time - timeBefore;\n        if (senderBefore !== msg.sender || timeDistance > 600000) {\n          notYet.sender = false;\n        }\n        if (timeDistance > 600000) {\n          notYet.time = false;\n        }\n        if (day - dayBefore >= 1) {\n          notYet.day = false;\n        }\n        return (\n          <Container me={me} key={index}>\n            <DayStyle notYet={notYet.day}>{time.toDateString()}</DayStyle>\n            <TimeStyle notYet={notYet.time}>\n              {time.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                hour12: true,\n                minute: 'numeric'\n              })}\n            </TimeStyle>\n            <div>\n              <Sender me={me} notYet={notYet.sender}>\n                <img\n                  alt=\"\"\n                  src={\n                    convoUsers[msg.sender] && convoUsers[msg.sender].imgSrc\n                      ? convoUsers[msg.sender].imgSrc\n                      : '/default-profile-pic.png'\n                  }\n                />\n\n                <TextBubble me={me}>\n                  <div>{msg.content}</div>\n                </TextBubble>\n              </Sender>\n            </div>\n          </Container>\n        );\n      })}\n    </MsgDisplayStyle>\n  );\n};\n\nexport default MsgDisplay;\n","import styled from 'styled-components';\n\nlet Form = styled.form`\n  border: solid lightgrey 1px;\n  border-radius: 2em;\n  padding: 0.25em 1em;\n  display: grid;\n  grid-template-columns: 1fr 1em;\n  input {\n    border: none;\n    font-size: 0.75em;\n    &:focus {\n      outline: 0;\n    }\n  }\n  button {\n    border: none;\n    padding: 0;\n    img {\n      width: 100%;\n    }\n    &:focus {\n      outline: 0;\n    }\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Form from './SearchBarStyle.jsx';\nimport { SIDE_BAR_WIDTH } from '../../data.js';\nlet MyInfo = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  padding: 0.5em;\n  color: black;\n  img {\n    height: 4em;\n    width: 4em;\n    border-radius: 50%;\n    margin-right: 0.5em;\n    object-fit: cover;\n  }\n`;\nlet Container = styled.div`\n  box-sizing: border-box;\n  padding: 0.5em;\n  @media screen and (max-width: 500px) {\n    width: 50%;\n  }\n  @media screen and (min-width: 500px) {\n    width: 350px;\n  }\n  height: 100%;\n  .box {\n    box-sizing: border-box;\n    background-color: white;\n    height: 100%;\n    border-radius: 0.5em;\n    padding: 0.5em;\n    display: flex;\n    flex-direction: column;\n    h2 {\n      font-size: 1em;\n    }\n    a {\n      width: 100%;\n      display: block;\n    }\n    .list-convos {\n      overflow: scroll;\n    }\n  }\n  .search {\n    padding: 0;\n    padding-bottom: 1em;\n  }\n`;\n//SearchBar is a functional component that takes as props a function.\n//This function is called on submission of the form.\nlet ListStyle = styled.div`\n  div {\n    border-radius: 1em;\n    background-color: ${props =>\n      props.current ? 'rgb(240, 240, 240)' : 'transparent'};\n    color: ${props => (props.current ? 'rgb(120, 120, 120)' : 'black')};\n    display: flex;\n    align-items: center;\n    padding: 0 1em;\n    position: relative;\n    p {\n      background-color: transparent;\n    }\n    &:hover {\n      cursor: pointer;\n      background-color: rgb(250, 250, 250);\n    }\n    img {\n      border: 2px solid;\n      border-color: ${props => (props.active ? 'lightgreen' : 'lightgrey')};\n      height: 2em;\n      width: 2em;\n      border-radius: 50%;\n      margin-right: 1em;\n      object-fit: cover;\n    }\n    .notification {\n      position: absolute;\n      top: 10px;\n      right: 0px;\n      height: ${props => (props.notify ? '10px' : '0')};\n      width: ${props => (props.notify ? '10px' : '0')};\n      border-radius: 50%;\n      background-color: ${props => (props.notify ? 'purple' : 'transparent')};\n      margin: 0;\n      padding: 0;\n      transition: height ease-in-out 0.2s, width ease-in-out 0.2s;\n    }\n  }\n`;\n\nlet ConvoList = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let convoList = useSelector(state => state.convoList);\n  let loggedIn = useSelector(state => state.login);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let currentConvo = useSelector(state => state.currentConvo);\n  let imgSrc = useSelector(state => state.userInfo.imgSrc);\n  let fname = useSelector(state => state.userInfo.fname);\n  let lname = useSelector(state => state.userInfo.lname);\n  let activeMembers = useSelector(state => state.activeUsers);\n  let notifications = useSelector(state => state.notifications);\n  let [filter, setFilter] = useState('');\n  let onSubmit = evt => {\n    evt.preventDefault();\n    setFilter('');\n  };\n  let onChange = evt => {\n    setFilter(evt.target.value);\n  };\n  let getConvo = (convoID, userID) => {\n    window.scrollTo({ left: window.innerWidth, behavior: 'smooth' });\n    dispatch({ type: 'set-current-convo', content: convoID });\n    dispatch({ type: 'remove-notification', content: userID });\n    history.push('/messenger/' + convoID);\n  };\n  if (!convoList) {\n    return <div></div>;\n  }\n  return (\n    <Container loggedIn={loggedIn}>\n      <div className=\"box\">\n        <Link to={'/profile'} style={{ textDecoration: 'none' }}>\n          <MyInfo>\n            <img alt=\"\" src={imgSrc ? imgSrc : '/default-profile-pic.png'} />\n            <div>\n              {fname} {lname}\n            </div>\n          </MyInfo>\n        </Link>\n        <h2>Conversations</h2>\n        <div className=\"search\">\n          <Form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              onChange={onChange}\n              placeholder={'Search convos...'}\n            />\n            <button>\n              <img alt=\"search-icon\" src={'/search.png'} />\n            </button>\n          </Form>\n        </div>\n        <div className=\"list-convos\">\n          {Object.keys(convoList).map((convoID, index) => {\n            let userID = convoList[convoID].label;\n            let name = convoUsers[userID].fname;\n            let imgSrc = convoUsers[userID].imgSrc;\n            if (notifications[userID] && currentConvo === convoID) {\n              dispatch({ type: 'remove-notification', content: userID });\n            }\n            if (\n              !filter === '' ||\n              name.toUpperCase().includes(filter.toUpperCase())\n            ) {\n              return (\n                <div key={'ConvoList' + index}>\n                  <ListStyle\n                    current={currentConvo === convoID}\n                    onClick={() => getConvo(convoID, userID)}\n                    notify={notifications[userID]}\n                    active={activeMembers[userID]}\n                  >\n                    <div>\n                      <img\n                        alt=\"\"\n                        src={imgSrc ? imgSrc : '/default-profile-pic.png'}\n                      />\n                      <p>{name}</p>\n                      <div className=\"notification\"></div>\n                    </div>\n                  </ListStyle>\n                </div>\n              );\n            }\n            return <div key={'ConvoList' + index}></div>;\n          })}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default ConvoList;\nexport { ListStyle };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { ListStyle } from './ConvoList.jsx';\nimport { Link } from 'react-router-dom';\n\nlet Container = styled.div`\n  background-color: white;\n  border-bottom: lightgrey 1px solid;\n  overflow: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nlet VideoChat = styled.div`\n  display: ${props => (props.active ? 'block' : 'none')};\n  height: 100%;\n  padding: 0;\n  padding-right: 1em;\n  a {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    img {\n      height: 35px;\n      width: 35px;\n    }\n  }\n`;\n\nlet MsgDetail = props => {\n  let thisConvoID = props.convoID;\n  let me = useSelector(state => state.userInfo.email);\n  let convoList = useSelector(state => state.convoList);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let members = convoList[thisConvoID] ? convoList[thisConvoID].members : [];\n  let activeUsers = useSelector(state => state.activeUsers);\n  let otherMembers = members.filter(user => {\n    return user !== me;\n  });\n  if (!convoList) {\n    return <div></div>;\n  }\n\n  return (\n    <Container>\n      {otherMembers.map((user, index) => {\n        let name = convoUsers[user].fname;\n        let imgSrc = convoUsers[user].imgSrc;\n        return (\n          <ListStyle key={index}>\n            <Link to={'/view-profile/' + convoUsers[user]._id}>\n              <div>\n                <img\n                  alt=\"\"\n                  src={imgSrc ? imgSrc : '/default-profile-pic.png'}\n                />\n                <p>{name}</p>\n              </div>\n            </Link>\n          </ListStyle>\n        );\n      })}\n      <VideoChat active={activeUsers ? activeUsers[otherMembers[0]] : false}>\n        <Link to={'/video-chat/' + props.convoID}>\n          <img alt=\"video-chat\" src={'/video-chat.png'} />\n        </Link>\n      </VideoChat>\n    </Container>\n  );\n};\n\nexport default MsgDetail;\n","import styled from 'styled-components';\n\nlet MsgInputStyle = styled.form`\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  border-top: solid 1px lightgrey;\n  padding: 0.5em 0;\n  align-items: center;\n  background-color: white;\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 3.5em;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n  img {\n    height: 2em;\n    margin: 0.5em;\n  }\n  button {\n    background-color: transparent;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n  textarea {\n    display: flex;\n    width: 100%;\n    height: auto;\n    padding: 1em 1.5em;\n    border-radius: 2em;\n    background-color: rgb(242, 242, 242);\n    border: none;\n    resize: none;\n    &:focus {\n      outline: 0;\n    }\n  }\n`;\n\nexport { MsgInputStyle };\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { socket } from './../Home/Login';\nimport { MsgInputStyle } from './MsgInputStyle.jsx';\n\nlet MsgInput = props => {\n  let formRef = useRef();\n  let convoID = props.convoID;\n  let [msgContent, setMsgContent] = useState('');\n  let user = useSelector(state => state.userInfo.email);\n  let convo = useSelector(state => state.conversations[convoID]);\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    socket.emit('new message', user, msgContent, convoID, convo.members);\n    setMsgContent('');\n    return;\n  };\n\n  let onChangeHandler = evt => {\n    setMsgContent(evt.target.value);\n    return;\n  };\n  let onEnterSubmit = evt => {\n    if (evt.keyCode === 13) {\n      submitHandler(evt);\n    }\n  };\n  return (\n    <MsgInputStyle onSubmit={submitHandler} ref={formRef}>\n      <textarea\n        rows=\"1\"\n        type=\"text\"\n        value={msgContent}\n        onChange={onChangeHandler}\n        onKeyDown={onEnterSubmit}\n        placeholder=\"Type a message...\"\n      />\n      <button>\n        <img alt=\"send\" src={'/send-button.png'} />\n      </button>\n    </MsgInputStyle>\n  );\n};\n\nexport default MsgInput;\n","import React, { useEffect, useRef } from 'react';\nimport MsgDisplay from './MsgDisplay.jsx';\nimport MsgDetail from './MsgDetail.jsx';\nimport MsgInput from './MsgInput.jsx';\nimport { socket } from './../Home/Login';\nimport styled from 'styled-components';\nimport ConvoList from './ConvoList.jsx';\n\nlet Div = styled.div`\n  height: 100%;\n  @media screen and (max-width: 500px) {\n    width: 200vw;\n  }\n  @media screen and (min-width: 500px) {\n    width: 100%;\n  }\n  box-sizing: border-box;\n  display: flex;\n`;\nlet MsgViewStyle = styled.div`\n  height: 100%;\n  position: relative;\n  @media screen and (max-width: 500px) {\n    width: 50%;\n  }\n  @media screen and (min-width: 500px) {\n    width: 100%;\n  }\n  box-sizing: border-box;\n  & > div {\n    box-sizing: border-box;\n    background-color: white;\n    border: lightgrey solid 1px;\n    height: 100%;\n    width: 100%;\n    display: grid;\n    position: absolute;\n    top: 0;\n    right: 0;\n    grid-template-rows: 50px 1fr 40px;\n  }\n`;\nlet MsgView = props => {\n  return (\n    <MsgViewStyle>\n      <div>\n        <MsgDetail convoID={props.thisConvoID} />\n        <MsgDisplay convoID={props.thisConvoID} />\n        <MsgInput convoID={props.thisConvoID} />\n      </div>\n    </MsgViewStyle>\n  );\n};\n\nlet Messenger = props => {\n  let thisConvoID = props.convoID;\n  useEffect(() => {\n    if (thisConvoID) {\n      socket.emit('getConvo', thisConvoID);\n    }\n  }, [thisConvoID]);\n  if (!props.convoID) {\n    return (\n      <Div>\n        <ConvoList />\n        <MsgViewStyle>\n          <img\n            src=\"/messenger-slide.jpeg\"\n            style={{ height: '100%', width: '100%', objectFit: 'cover' }}\n          />\n        </MsgViewStyle>\n      </Div>\n    );\n  }\n  return (\n    <Div>\n      <ConvoList />\n      <MsgView thisConvoID={props.convoID} />\n    </Div>\n  );\n};\n\nexport default Messenger;\n","import styled from 'styled-components';\nlet LilVid = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 3;\n  width: ${props =>\n    props.size === 'big'\n      ? '400px'\n      : props.size === 'medium'\n      ? '200px'\n      : '100px'};\n  height: ${props =>\n    props.size === 'big'\n      ? '200px'\n      : props.size === 'medium'\n      ? '100px'\n      : '50px'};\n  transition: ease-in-out 0.3s;\n  &:hover {\n    cursor: pointer;\n  }\n  min-width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  video {\n    width: 100%;\n  }\n`;\nlet VideoChatPage = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  .streams {\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    .big-vid {\n      z-index: 2;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      video {\n        width: 100%;\n        max-width: 800px;\n        max-height: 100vh;\n      }\n    }\n  }\n  .options {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 4em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    img {\n      height: 90%;\n      transition: ease-in 0.1s;\n      &:hover {\n        cursor: pointer;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default VideoChatPage;\nexport { LilVid };\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nlet PopupStyle = styled.div`\n  height: 100vh;\n  width: 100vw;\n  z-index: 10000;\n  color: black;\n  border: red;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: ${props => (props.show ? 'flex' : 'none')};\n  justify-content: center;\n  align-items: center;\n  h1 {\n    background-color: rgba(300, 300, 300, 0.5);\n    padding: 1em;\n    border-radius: 1em;\n    font-size: 1em;\n    font-weight: lighter;\n  }\n`;\nlet Popup = props => {\n  let [show, setShow] = useState(true);\n  useEffect(() => {\n    setShow(true);\n    setTimeout(() => setShow(false), 2000);\n  }, [props.content]);\n  return (\n    <PopupStyle show={show}>\n      <h1>\n        {props.person}\n        {props.content}\n      </h1>\n    </PopupStyle>\n  );\n};\nexport default Popup;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { socket } from '../Home/Login.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport VideoChatPage, { LilVid } from './VideoChatStyles.jsx';\nimport Popup from './Popup.jsx';\nimport Peer from 'simple-peer'; //each client is a peer, you will create a new instance of a peer\n\nlet VideoChat = props => {\n  let dispatch = useDispatch();\n  let history = useHistory();\n  let convoID = props.convoID;\n  let me = useSelector(state => state.userInfo.email);\n  let activeUsers = useSelector(state => state.activeUsers);\n  let activeUsersRef = useRef();\n  activeUsersRef.current = activeUsers;\n  let meRef = useRef();\n  meRef.current = me;\n  let peers = useSelector(state => state.peers);\n  let peersRef = useRef();\n  peersRef.current = peers;\n  let videoChatInitiator = useSelector(state => state.videoChatInitiator);\n  let [lilVidSize, setlilVidSize] = useState('medium');\n  let [content, setContent] = useState('Welcome');\n  let [person, setPerson] = useState('');\n  let [show, setShow] = useState(false);\n  let [myStream, setMyStream] = useState(false);\n  let [otherStream, setOtherStream] = useState(false);\n  let [peer, setPeer] = useState(false);\n\n  useEffect(() => {\n    if (convoID && me) {\n      dispatch({ type: 'videoChatMode', content: true }); //to hide navbars\n      socket.emit('video-chat-start', convoID, me);\n    }\n  }, [convoID, dispatch, me]);\n  useEffect(() => {\n    if (videoChatInitiator && convoID && me) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then(stream => {\n          //webRTC connection\n          let peer = new Peer({\n            initiator: videoChatInitiator === meRef.current ? true : false,\n            trickle: false,\n            stream: stream\n          });\n          //initiator calls function, others only call function on signal\n          peer.on('signal', data => {\n            dispatch({\n              type: 'set-peer',\n              content: { data: JSON.stringify(data), user: me }\n            });\n            socket.emit('offer', data, me, convoID);\n          });\n          peer.on('stream', stream => {\n            // set stream of other user\n            setOtherStream(stream);\n          });\n          //get stream\n          setMyStream(stream);\n          let offerBack = (offerData, offerer, answerer, convoID) => {\n            dispatch({\n              type: 'set-peer',\n              content: { data: JSON.stringify(offerData), user: offerer }\n            });\n            peer.signal(offerData);\n          };\n          socket.on('offerBack', offerBack);\n          setPeer(peer);\n        });\n    }\n  }, [videoChatInitiator, convoID, me, dispatch]);\n  useEffect(() => {\n    socket.on('video-chat-decline-back', (convoID, decliner) => {\n      setContent(' has declined invite.');\n      setPerson(activeUsersRef.current[decliner].fname);\n      setShow(true);\n    });\n  }, []);\n\n  let endCall = () => {\n    let end = window.confirm('You are about to leave video chat!');\n    if (end) {\n      dispatch({ type: 'videoChatMode', content: false });\n      socket.emit('video-chat-leave', convoID, me);\n      history.push('/messenger/' + convoID);\n      if (myStream) {\n        myStream.getTracks().map(val => {\n          return val.stop();\n        });\n      }\n      socket.off('offerBack');\n      if (peer) {\n        peer.destroy();\n      }\n      dispatch({ type: 'destroy-peers' });\n    }\n  };\n  let changelilVidSize = () => {\n    if (lilVidSize === 'medium') {\n      setlilVidSize('big');\n    }\n    if (lilVidSize === 'small') {\n      setlilVidSize('medium');\n    }\n    if (lilVidSize === 'big') {\n      setlilVidSize('small');\n    }\n  };\n  return (\n    <VideoChatPage>\n      <div className=\"streams\">\n        <div className=\"big-vid\">\n          <video\n            key={'othervid'}\n            autoPlay\n            ref={vid => {\n              if (!otherStream || !vid) return;\n              vid.srcObject = otherStream;\n            }}\n          />\n        </div>\n        <LilVid size={lilVidSize} onClick={changelilVidSize}>\n          <video\n            key={'myvid'}\n            autoPlay\n            muted\n            ref={vid => {\n              if (!myStream || !vid) return;\n              vid.srcObject = myStream;\n            }}\n          />\n        </LilVid>\n      </div>\n      <div className=\"options\">\n        <img src=\"/end-call.png\" onClick={endCall} alt=\"end-video-chat-icon\" />\n      </div>\n      <Popup show={show} content={content} person={person} />\n    </VideoChatPage>\n  );\n};\nexport default VideoChat;\n","import styled from 'styled-components';\nimport Form from '../Home/FormStyle.jsx';\nlet Form1 = styled(Form)`\n  display: ${props => (props.displayInfo === 'form' ? 'block' : 'none')};\n  @media screen and (max-width: 500px) {\n    box-sizing: border-box;\n    width: 100vw;\n    margin-bottom: 4em;\n  }\n  @media screen and (min-width: 500px) {\n    width: 350px;\n  }\n  margin-top: 3em;\n`;\nlet Cancel = styled.div`\n  display: ${props => (props.disapear ? 'block' : 'none')};\n  text-align: left;\n  color: rgb(1, 57, 59);\n  &:hover {\n    cursor: pointer;\n    color: purple;\n    text-decoration: underline;\n  }\n`;\nlet Info = styled.div`\n  display: ${props => (props.displayInfo === 'info' ? 'block' : 'none')};\n  margin: 6em 4em;\n`;\nlet Img1 = styled.img`\n  display: ${props => (props.img === 1 && !props.disapear ? 'block' : 'none')};\n`;\nlet Img2 = styled.img`\n  display: ${props => (props.img === 2 && !props.disapear ? 'block' : 'none')};\n`;\nlet EditPencil = styled.div`\n  position: absolute;\n  height: 30px;\n  width: 30px;\n  top: 250px;\n  right: 50px;\n  &:hover {\n    cursor: ${props => (props.disapear ? 'default' : 'pointer')};\n  }\n  img {\n    height: 100%;\n    width: 100%;\n  }\n`;\nlet Container = styled.div`\n  position: relative;\n  background-color: white;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 800px;\n  min-height: 100%;\n`;\nlet BackgroundImg = styled.div`\n  .container {\n    width: 100%;\n    height: 230px;\n    img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nlet ProfileImg = styled.label`\n  position: absolute;\n  top: 120px;\n  left: 50px;\n  .container {\n    position: relative;\n    height: 180px;\n    width: 180px;\n    &:hover {\n      cursor: pointer;\n      div {\n        display: flex;\n      }\n    }\n    input {\n      display: none;\n    }\n    img {\n      height: 100%;\n      width: 100%;\n      border-radius: 50%;\n      object-fit: cover;\n      border: 5px white solid;\n    }\n    div {\n      border-radius: 50%;\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      display: none;\n      color: white;\n      justify-content: center;\n      align-items: center;\n      background-color: rgba(0, 0, 0, 0.5);\n      border: white solid 5px;\n    }\n  }\n`;\nexport {\n  ProfileImg,\n  BackgroundImg,\n  Container,\n  EditPencil,\n  Img2,\n  Img1,\n  Info,\n  Cancel,\n  Form1\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { socket } from './../Home/Login.jsx';\nimport {\n  ProfileImg,\n  BackgroundImg,\n  Container,\n  EditPencil,\n  Img2,\n  Img1,\n  Info,\n  Cancel,\n  Form1\n} from './profileStyle.jsx';\n\nlet Profile = () => {\n  let dispatch = useDispatch();\n  let userInfo = useSelector(state => state.userInfo);\n  const [fname, fnameChange] = useState('');\n  const [lname, lnameChange] = useState('');\n  const [email, emailChange] = useState('');\n  const [description, descriptionChange] = useState('');\n  const [hoverImg, hoverImgChange] = useState(2);\n  const [displayInfo, displayInfoChange] = useState('info');\n  const [hoverImgDisapear, hoverImgDisapearChange] = useState(false);\n  useEffect(() => {\n    fnameChange(userInfo.fname);\n    lnameChange(userInfo.lname);\n    emailChange(userInfo.email);\n    descriptionChange(userInfo.description);\n  }, [userInfo]);\n  let profileSubmit = async evt => {\n    evt.preventDefault();\n    let data = new FormData();\n    data.append('description', description);\n    data.append('fname', fname);\n    data.append('lname', lname);\n    data.append('userID', email);\n    let responseBody = await fetch('/edit-profile', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      socket.emit('user-edit', email);\n      dispatch({\n        type: 'edit-profile',\n        content: {\n          fname: fname,\n          lname: lname,\n          description: description\n        }\n      });\n      displayInfoChange('info');\n      hoverImgDisapearChange(false);\n    }\n  };\n  let imgSubmit = async evt => {\n    let data = new FormData();\n    data.append('imgSrc', evt.target.files[0]);\n    data.append('userID', userInfo.email);\n    let responseBody = await fetch('/edit-profile-img', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      socket.emit('user-edit', email);\n      dispatch({\n        type: 'edit-profile-img',\n        content: {\n          imgSrc: response.imgSrc\n        }\n      });\n    } else {\n      console.log('ERROR - session not valid');\n    }\n  };\n  if (!userInfo) {\n    //Loading\n    return <div></div>;\n  }\n  return (\n    <Container>\n      <BackgroundImg>\n        <div className=\"container\">\n          <img alt=\"profile-img\" src={'/background.jpg'} />\n        </div>\n      </BackgroundImg>\n      <ProfileImg>\n        <div className=\"container\">\n          <img\n            alt=\"profile-img\"\n            src={userInfo.imgSrc ? userInfo.imgSrc : '/default-profile-pic.png'}\n          />\n          <div>Edit Image</div>\n          <input\n            type=\"file\"\n            onChange={evt => {\n              imgSubmit(evt);\n            }}\n          />\n        </div>\n      </ProfileImg>\n      <Info displayInfo={displayInfo}>\n        <h2>\n          {userInfo.fname} {userInfo.lname}\n        </h2>\n        <p>{userInfo.description}</p>\n      </Info>\n      <Form1 onSubmit={profileSubmit} displayInfo={displayInfo}>\n        <h1>Edit Profile</h1>\n        <div>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            value={fname}\n            onChange={evt => {\n              fnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Last Name</label>{' '}\n          <input\n            type=\"text\"\n            value={lname}\n            onChange={evt => {\n              lnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Description</label>\n          <input\n            type=\"text-area\"\n            value={description}\n            onChange={evt => {\n              descriptionChange(evt.target.value);\n            }}\n          />\n        </div>\n        <button>Make Changes</button>\n        <Cancel\n          onClick={() => {\n            displayInfoChange('info');\n            hoverImgDisapearChange(false);\n          }}\n          disapear={hoverImgDisapear}\n        >\n          Cancel\n        </Cancel>\n      </Form1>\n      <EditPencil\n        onMouseEnter={() => hoverImgChange(1)}\n        onMouseLeave={() => hoverImgChange(2)}\n        onClick={() => {\n          displayInfoChange('form');\n          hoverImgDisapearChange(true);\n        }}\n        disapear={hoverImgDisapear}\n      >\n        <Img1\n          alt=\"pencil-edit\"\n          src={'/pencil-edit.png'}\n          img={hoverImg}\n          disapear={hoverImgDisapear}\n        />\n        <Img2\n          alt=\"pencil-edit2\"\n          src={'/pencil-edit2.png'}\n          img={hoverImg}\n          disapear={hoverImgDisapear}\n        />\n      </EditPencil>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ProfileImg, BackgroundImg, Container, Info } from './profileStyle.jsx';\nimport styled from 'styled-components';\nimport { socket } from './../Home/Login';\nlet ProfileImg2 = styled(ProfileImg)`\n  .container {\n    &:hover {\n      cursor: default;\n    }\n  }\n`;\nlet Button = styled.div`\n  color: rgb(33, 125, 183);\n  position: absolute;\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 500px) {\n    right: 10px;\n    top: 250px;\n    flex-direction: column;\n  }\n  @media screen and (min-width: 500px) {\n    right: 50px;\n    top: 250px;\n  }\n  border: 1px solid transparent;\n  &:hover {\n    cursor: pointer;\n    color: grey;\n  }\n  img {\n    height: 40px;\n    padding: 0.5em;\n  }\n`;\nlet OtherProfile = userID => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [chatSrcImg, changeChatSrcImg] = useState('/messages.png');\n  let otherUserInfo = useSelector(state => state.otherUserInfo[userID.userID]);\n  let myInfo = useSelector(state => state.userInfo);\n\n  let startConvo = async userID => {\n    let myID = myInfo.email;\n    let users = [userID, myID];\n    let data = new FormData();\n    users.forEach(user => data.append('users', user));\n    let responseBody = await fetch('/get-convoID', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      if (response.new) {\n        socket.emit('startConvo', users, response.convoID);\n      }\n      dispatch({ type: 'set-current-convo', content: response.convoID });\n      history.push('/messenger/' + response.convoID);\n    }\n  };\n\n  useEffect(() => {\n    let data = new FormData();\n    data.append('userID', userID.userID);\n    fetch('/get-userInfo', { method: 'POST', body: data })\n      .then(responseBody => responseBody.text())\n      .then(responseText => JSON.parse(responseText))\n      .then(response => {\n        if (response.success) {\n          dispatch({ type: 'add-profile', content: response.userInfo });\n        }\n      });\n  }, [userID.userID, dispatch]);\n\n  if (!otherUserInfo) {\n    return <h1></h1>;\n  }\n\n  return (\n    <Container>\n      <BackgroundImg>\n        <div className=\"container\">\n          <img alt=\"profile-img\" src={'/background.jpg'} />\n        </div>\n      </BackgroundImg>\n      <ProfileImg2>\n        <div className=\"container\">\n          <img\n            alt=\"profile-img\"\n            src={\n              otherUserInfo.imgSrc\n                ? otherUserInfo.imgSrc\n                : '/default-profile-pic.png'\n            }\n          />\n        </div>\n      </ProfileImg2>\n      <Info displayInfo={'info'}>\n        <h2>\n          {otherUserInfo.fname} {otherUserInfo.lname}\n        </h2>\n        <p>{otherUserInfo.description}</p>\n      </Info>\n      <Button\n        onMouseEnter={() => changeChatSrcImg('/messages-grey.png')}\n        onMouseLeave={() => changeChatSrcImg('/messages.png')}\n        onClick={() => startConvo(otherUserInfo.email)}\n      >\n        Chat\n        <img src={chatSrcImg} alt=\"start-chat-with-this-person-icon\" />\n      </Button>\n    </Container>\n  );\n};\n\nexport default OtherProfile;\n","import styled from 'styled-components';\nlet H1 = styled.div`\n  h1 {\n    color: grey;\n    margin: 1em 0 0 0;\n    font-size: 1em;\n    font-weight: normal;\n    display: flex;\n    justify-content: center;\n  }\n`;\nlet Form = styled.form`\n  width: 100%;\n  background-color: white;\n  border-bottom: 1px solid lightgrey;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    input {\n      width: 300px;\n      border-bottom: lightgrey 1px solid;\n    }\n  }\n  input {\n    height: 50%;\n    border: 0;\n    width: 0;\n    transition: ease-in-out 0.5s;\n    border-bottom: transparent 1px solid;\n    &:focus {\n      outline: 0;\n      width: 300px;\n      border-bottom: lightgrey 1px solid;\n    }\n  }\n  .button {\n    height: 50%;\n    &:hover {\n      cursor: pointer;\n    }\n    img {\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\nlet Container = styled.div`\n  overflow: scroll;\n  max-height: 90vh;\n  padding-top: 1em;\n  .err {\n    display: flex;\n    justify-content: center;\n    color: purple;\n  }\n`;\nlet ActiveUserStyle = styled.div`\n  background-color: white;\n  position: relative;\n  border-radius: 0.2em;\n  padding: 1em;\n  box-shadow: 1px 1px 5px lightgrey;\n  margin: 0.5em;\n  width: 100px;\n  text-align: center;\n  button {\n    color: white;\n    background-color: purple;\n    border: none;\n    padding: 0.5em;\n    &:hover {\n      cursor: pointer;\n      background-color: darkgrey;\n    }\n  }\n  img {\n    border-radius: 50%;\n    height: 70px;\n    width: 70px;\n    object-fit: cover;\n    margin-right: 0.5em;\n  }\n`;\nlet SearchUserStyle = styled(ActiveUserStyle)`\n  display: flex;\n  width: 90%;\n  align-items: center;\n  position: relative;\n  .info {\n    text-align: left;\n    h2 {\n      font-size: 20px;\n      font-weight: normal;\n      margin: 0;\n    }\n    p {\n      font-size: 12px;\n      margin: 0;\n    }\n  }\n  img {\n    height: 50px;\n    width: 50px;\n  }\n  .cover {\n    border-radius: 0.2em;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: none;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    background-color: rgba(1, 1, 10, 0.6);\n  }\n\n  &:hover {\n    cursor: pointer;\n    .cover {\n      display: flex;\n    }\n  }\n`;\nlet ContactUserStyle = styled.div`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  padding: 0;\n  box-shadow: 1px 1px 5px lightgrey;\n  position: relative;\n  margin: 0.5em;\n  img {\n    border-radius: 50%;\n    height: 70px;\n    width: 70px;\n    object-fit: cover;\n  }\n  &:hover {\n    cursor: pointer;\n    .cover {\n      display: flex;\n    }\n  }\n`;\nlet ContactCover = styled.div`\n  border-radius: 50%;\n  padding: 0;\n  margin: 0;\n  z-index: 1000;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: none;\n  background-color: rgba(1, 1, 10, 0.6);\n  width: 100%;\n  height: 100%;\n  color: white;\n  justify-content: center;\n  align-items: center;\n  h1 {\n    color: white;\n  }\n`;\nlet Container2 = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-wrap: wrap;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nexport default Container;\nexport {\n  Container2,\n  ContactCover,\n  ContactUserStyle,\n  SearchUserStyle,\n  ActiveUserStyle,\n  Form,\n  H1\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Container, {\n  Container2,\n  ContactCover,\n  ContactUserStyle,\n  SearchUserStyle,\n  ActiveUserStyle,\n  Form,\n  H1\n} from './DiscoverStyled.jsx';\n\nlet Discover = () => {\n  const history = useHistory();\n  let activeUsers = useSelector(state => state.activeUsers); // userID:{fname,image,description}\n  let convoUsers = useSelector(state => state.convoUsers);\n  let me = useSelector(state => state.userInfo.email);\n  let [searchInput, setSearchInput] = useState('');\n  let [errorMsg, setErrorMsg] = useState('');\n  let [searchResults, setSearchResults] = useState([]);\n  let viewProfile = async userID => {\n    let path = '';\n    if (activeUsers[userID]) {\n      path = activeUsers[userID]._id;\n    } else {\n      path = convoUsers[userID]._id;\n    }\n    history.push('/view-profile/' + path);\n  };\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    if (searchInput === '') {\n      setSearchResults([]);\n      return;\n    }\n    let data = new FormData();\n    data.append('searchInput', searchInput);\n    let responseBody = await fetch('/searchQuery', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      setSearchInput('');\n      console.log('results', response.results);\n      if (response.results.length === 0) {\n        setErrorMsg('No results found');\n      }\n      setSearchResults(response.results);\n    } else {\n      console.log('Did not find anything.');\n    }\n  };\n  let changeHandler = evt => {\n    if (errorMsg !== '') {\n      setErrorMsg('');\n    }\n    setSearchInput(evt.target.value);\n  };\n  return (\n    <div>\n      <Form onSubmit={submitHandler}>\n        <input\n          placeholder=\"Find user...\"\n          type=\"text\"\n          onChange={changeHandler}\n          value={searchInput}\n        />\n        <div className=\"button\" onClick={submitHandler}>\n          <img src=\"/search.png\" />\n        </div>\n      </Form>\n      <H1>\n        <Container>\n          <div className=\"err\">{errorMsg}</div>\n          {searchResults.map((user, index) => {\n            return (\n              <SearchUserStyle\n                onClick={() => history.push('/view-profile/' + user._id)}\n                key={'searched-user' + index}\n              >\n                <img\n                  alt=\"\"\n                  src={user.imgSrc ? user.imgSrc : '/default-profile-pic.png'}\n                />\n                <div className=\"info\">\n                  <h2>{user.fname + ' ' + user.lname}</h2>\n                  <p>{user.description}</p>\n                </div>\n                <div className=\"cover\">View Profile</div>\n              </SearchUserStyle>\n            );\n          })}\n        </Container>\n      </H1>\n      <H1>\n        {Object.keys(activeUsers).length > 1 ? <h1>Currently online</h1> : ''}\n        <Container>\n          {Object.keys(activeUsers).map((userID, index) => {\n            if (userID !== me) {\n              return (\n                <ActiveUserStyle key={'active-user' + index}>\n                  <img\n                    alt=\"\"\n                    src={\n                      activeUsers[userID].imgSrc\n                        ? activeUsers[userID].imgSrc\n                        : '/default-profile-pic.png'\n                    }\n                  />\n                  <div className=\"info\">\n                    <p>{activeUsers[userID].fname}</p>\n                    <button onClick={() => viewProfile(userID)}>\n                      View Profile\n                    </button>\n                  </div>\n                </ActiveUserStyle>\n              );\n            } else {\n              return <div key={'non-active-user' + index}></div>;\n            }\n          })}\n        </Container>\n      </H1>\n      <H1>\n        <h1>Your Contacts</h1>\n        <Container2>\n          {Object.keys(convoUsers).map((userID, index) => {\n            if (userID !== me) {\n              return (\n                <ContactUserStyle\n                  onClick={() => viewProfile(userID)}\n                  key={'convo-user' + index}\n                >\n                  <img\n                    alt=\"\"\n                    src={\n                      convoUsers[userID].imgSrc\n                        ? convoUsers[userID].imgSrc\n                        : '/default-profile-pic.png'\n                    }\n                  />\n                  <ContactCover className=\"cover\">\n                    <h1>{convoUsers[userID].fname}</h1>\n                  </ContactCover>\n                </ContactUserStyle>\n              );\n            } else {\n              return <div key={'non-active-user' + index}></div>;\n            }\n          })}\n        </Container2>\n      </H1>\n    </div>\n  );\n};\n\nexport default Discover;\n","import styled from 'styled-components';\nimport { SIDE_BAR_WIDTH } from '../../data.js';\nconst SliderContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: 100%;\n  height: 70%;\n`;\nconst ImgDiv = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  transition: ease-in-out 0.25s;\n  @media screen and (max-width: 800px) {\n    width: ${props => props.length * 100 + 'vw'};\n    left: ${props =>\n      -(props.position / props.length) * props.length * 100 + 'vw'};\n  }\n  @media screen and (min-width: 800px) {\n    width: ${props => props.length * 100 + '%'};\n    left: ${props =>\n      -(props.position / props.length) * props.length * 100 + '%'};\n  }\n  height: 100%;\n  position: absolute;\n  top: 0;\n  img {\n    @media screen and (max-width: 800px) {\n      width: ${props => 100 / props.length + 'vw'};\n    }\n    @media screen and (min-width: 800px) {\n      width: ${props => 100 / props.length + '%'};\n    }\n    height: 90%;\n    object-fit: cover;\n    overflow: hidden;\n    z-index: 1;\n  }\n`;\nconst LeftArrow = styled.div`\n  height: 100%;\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n  }\n  @media screen and (min-width: 800px) {\n    width: 40%;\n  }\n  left: 0;\n  position: absolute;\n  justify-content: flex-start;\n  align-items: center;\n  display: flex;\n  z-index: 2;\n  img {\n    width: 30px;\n    display: ${props => props.toggle};\n    filter: invert(1);\n    opacity: 65%;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst RightArrow = styled(LeftArrow)`\n  @media screen and (max-width: 800px) {\n    left: 60vw;\n  }\n  @media screen and (min-width: 800px) {\n    left: 60%;\n  }\n  justify-content: flex-end;\n`;\nconst ImgBall = styled.div`\n  position: relative;\n  height: 10px;\n  width: 10px;\n  margin: 10px;\n  right: 0;\n  bottom: 0;\n  border-radius: 1em;\n  z-index: 3;\n  background-color: ${props => props.bc};\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ImgBalls = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  justify-content: center;\n  display: flex;\n`;\n\nconst Slide = styled.div`\n  box-sizing: border-box;\n  width: 100vw;\n  height: 100%;\n  display: grid;\n  @media screen and (max-width: 800px) {\n    grid-template-rows: ${props =>\n      props.slideStyle.imgPath ? '1fr 2fr' : '1fr'};\n  }\n  @media screen and (min-width: 800px) {\n    grid-template-columns: ${props =>\n      props.slideStyle.imgPath ? '1fr 2fr' : '1fr'};\n  }\n\n  background-color: ${props => props.slideStyle.color};\n  img {\n    height: 100%;\n    width: 100%;\n    box-sizing: border-box;\n    display: ${props => (props.slideStyle.imgPath ? 'block' : 'none')};\n  }\n  div {\n    box-sizing: border-box;\n    padding: 2em;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    p {\n      padding: 1em;\n    }\n    h1 {\n      color: white;\n    }\n  }\n`;\nexport {\n  ImgBalls,\n  ImgBall,\n  RightArrow,\n  LeftArrow,\n  ImgDiv,\n  SliderContainer,\n  Slide\n};\n","import React, { Component } from 'react';\nimport {\n  ImgBalls,\n  ImgBall,\n  RightArrow,\n  LeftArrow,\n  ImgDiv,\n  SliderContainer,\n  Slide\n} from './ImageSliderStyle.jsx';\n\nclass ImageSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: 'none',\n      position: 0\n    };\n  }\n  componentDidUpdate = prevProps => {\n    if (prevProps.mainImage !== this.props.mainImage) {\n      this.setState({ position: this.state.position });\n    }\n  };\n  displayArrows = () => {\n    this.setState({ toggle: 'block' });\n    setTimeout(() => {\n      this.setState({ toggle: 'none' });\n    }, 1500);\n  };\n\n  shiftLeft = () => {\n    if (this.state.position === 0) {\n      return;\n    }\n    this.setState({ position: this.state.position - 1 });\n  };\n\n  shiftRight = () => {\n    if (this.state.position === this.props.slides.length - 1) {\n      return;\n    }\n    this.setState({ position: this.state.position + 1 });\n  };\n\n  render() {\n    return (\n      <SliderContainer onMouseEnter={this.displayArrows}>\n        <LeftArrow toggle={this.state.toggle} onClick={this.shiftLeft}>\n          <img src=\"/left-arrow.png\" />\n        </LeftArrow>\n        <ImgDiv\n          position={this.state.position}\n          length={this.props.slides.length}\n        >\n          {this.props.slides.map((slide, index) => {\n            return (\n              <Slide key={'imgSlider' + index} slideStyle={slide}>\n                <div>\n                  <h1>{slide.title}</h1>\n                  <p>{slide.title2}</p>\n                </div>\n                <img src={slide.imgPath} />\n              </Slide>\n            );\n          })}\n        </ImgDiv>\n        <RightArrow toggle={this.state.toggle} onClick={this.shiftRight}>\n          <img src=\"/right-arrow.png\" />\n        </RightArrow>\n        <ImgBalls>\n          {this.props.slides.map((img, index) => {\n            return (\n              <ImgBall\n                onMouseEnter={() => this.setState({ position: index })}\n                key={index}\n                bc={index === this.state.position ? '#0064cf' : 'grey'}\n              />\n            );\n          })}\n        </ImgBalls>\n      </SliderContainer>\n    );\n  }\n}\n\nexport default ImageSlider;\n","import React from 'react';\nimport ImageSlider from '../Slider/ImageSlider.jsx';\nimport styled from 'styled-components';\nimport { SIDE_BAR_WIDTH } from '../../data.js';\nlet slides = [\n  {\n    color: '#7CB9E8',\n    title: 'Welcome!',\n    title2:\n      'Experience a dynamic user interface, built with React.js and a Node.js web server, hosted by Heroku.'\n  },\n  {\n    color: 'rgb(253,193,49)',\n    title: 'Discover new people!',\n    title2:\n      'See who is currently online, and view their profile. Information is saved on a MongoDB database',\n    imgPath: '/discover-slide.jpg'\n  },\n  {\n    color: '#2177B6',\n    title: 'Chat with users!',\n    title2: 'Messages update instantly, using WebSocket technology.',\n    imgPath: '/messenger-slide.jpeg'\n  },\n  {\n    color: 'rgb(150,85,183)',\n    title: 'Video chat!',\n    title2: 'Connect directly to peers, using WebRTC.',\n    imgPath: '/video-chat-slide.png'\n  }\n];\n\nlet Div = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  .innerDiv {\n    width: 100%;\n    height: 100%;\n    /* @media screen and (min-width: 800px) {\n      padding: 0 ${SIDE_BAR_WIDTH}px;\n    } */\n  }\n`;\nlet Home = () => {\n  return (\n    <Div>\n      <div className=\"innerDiv\">\n        <ImageSlider slides={slides} />\n      </div>\n    </Div>\n  );\n};\n\nexport default Home;\n","const SIDE_BAR_WIDTH = 80;\nconst TOP_BAR_HEIGHT = 50;\nconst CONVO_BAR_WIDTH = 200;\nconst BG_COLOR = 'rgb(240,240,240)';\nexport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT, CONVO_BAR_WIDTH, BG_COLOR };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Form, { Title, E } from './FormStyle.jsx';\nimport { socket } from './Login.jsx';\n\nlet Register = props => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, emailChange] = useState('');\n  const [pw, pwChange] = useState('');\n  const [confirmPw, confirmPwChange] = useState('');\n  const [errMsg, errMsgChange] = useState('');\n  const [fname, fnameChange] = useState('');\n  const [lname, lnameChange] = useState('');\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    errMsgChange('');\n    if (confirmPw !== pw) {\n      errMsgChange(\"Passwords don't match!\");\n      return;\n    } else {\n      let data = new FormData();\n      data.append('email', email);\n      data.append('pw', pw);\n      data.append('fname', fname);\n      data.append('lname', lname);\n      let responseBody = await fetch('/register', {\n        method: 'POST',\n        body: data\n      });\n      let responseText = await responseBody.text();\n      let response = JSON.parse(responseText);\n      if (response.success) {\n        emailChange('');\n        pwChange('');\n        confirmPwChange('');\n        fnameChange('');\n        lnameChange('');\n        dispatch({\n          type: 'login',\n          content: {\n            userInfo: response.userInfo,\n            activeUsers: response.activeUsers,\n            convoList: response.convoList,\n            convoUsers: response.convoUsers\n          }\n        });\n        socket.connect();\n        socket.emit('login', response.userInfo);\n        history.push('/');\n      } else {\n        errMsgChange(response.errorMessage);\n      }\n    }\n  };\n  return (\n    <Form onSubmit={submitHandler}>\n      <Title>\n        <h1>Register</h1>\n      </Title>\n      <div className=\"row\">\n        <div>\n          <label htmlFor=\"fname\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"fname\"\n            required\n            autoComplete=\"on\"\n            value={fname}\n            onChange={evt => {\n              fnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"lname\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lname\"\n            required\n            autoComplete=\"on\"\n            value={lname}\n            onChange={evt => {\n              lnameChange(evt.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          required\n          autoComplete=\"on\"\n          value={email}\n          onChange={evt => {\n            emailChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"pw\">Password</label>\n        <input\n          type=\"password\"\n          id=\"pw\"\n          required\n          autoComplete=\"off\"\n          value={pw}\n          onChange={evt => {\n            pwChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"confirmPw\">Confirm password</label>\n        <input\n          type=\"password\"\n          id=\"confirmPw\"\n          required\n          autoComplete=\"off\"\n          value={confirmPw}\n          onChange={evt => {\n            confirmPwChange(evt.target.value);\n          }}\n        />\n      </div>\n\n      <button>Create account</button>\n      <E>{errMsg}</E>\n    </Form>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from '../../data.js';\n\nlet SideNavStyle = styled.div`\n  display: ${props =>\n    props.logggedIn && !props.videoChatMode ? 'block' : 'none'};\n  z-index: 100;\n  background-color: rgb(100, 100, 100);\n  position: fixed;\n  @media screen and (min-width: 500px) {\n    left: 0;\n    top: ${TOP_BAR_HEIGHT}px;\n    height: 100%;\n    & > div {\n      width: ${SIDE_BAR_WIDTH}px;\n      text-align: center;\n      a {\n        font-size: 0.7em;\n        text-decoration: none;\n        color: white;\n        height: min-content;\n      }\n      div {\n        box-sizing: border-box;\n        padding: 1em;\n        margin-bottom: 2em;\n        position: relative;\n        height: 70px;\n        &:hover {\n          padding: 0.5em;\n        }\n        img {\n          width: 70%;\n        }\n      }\n    }\n  }\n  @media screen and (max-width: 500px) {\n    bottom: 0;\n    width: 100%;\n    height: ${SIDE_BAR_WIDTH}px;\n    & > div {\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      a {\n        font-size: 0.7em;\n        text-decoration: none;\n        color: white;\n        height: 100%;\n        width: 30%;\n      }\n\n      div {\n        box-sizing: border-box;\n        padding: 1em;\n        position: relative;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        &:hover {\n          padding: 0.5em;\n        }\n        img {\n          height: 70%;\n          width: auto;\n          margin-bottom: 0.5em;\n        }\n      }\n    }\n  }\n  .notify {\n    position: absolute;\n    top: 10px;\n    right: 1em;\n    height: ${props => (props.notify ? '10px' : '0')};\n    width: ${props => (props.notify ? '10px' : '0')};\n    border-radius: 50%;\n    background-color: ${props => (props.notify ? 'purple' : 'transparent')};\n    margin: 0;\n    padding: 0;\n    transition: height ease-in-out 0.2s, width ease-in-out 0.2s;\n  }\n`;\n\nlet SideNav = () => {\n  let location = useLocation();\n  let loggedIn = useSelector(state => state.login);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let notifications = useSelector(state => state.notifications);\n  let [notify, setNotify] = useState(false);\n  let scrollLeft = () => {\n    window.scrollTo({ left: 0 });\n  };\n  useEffect(() => {\n    if (\n      Object.values(notifications).some(x => x === true) &&\n      location.pathname.slice(0, 10) !== '/messenger'\n    ) {\n      setNotify(true);\n    } else {\n      setNotify(false);\n    }\n  }, [notifications, location.pathname]);\n  return (\n    <SideNavStyle\n      logggedIn={loggedIn}\n      videoChatMode={videoChatMode}\n      notify={notify}\n    >\n      <div>\n        <Link to=\"/active-users\">\n          <div>\n            <img alt=\"\" src={'/find-users.png'} />\n            Discover\n          </div>\n        </Link>\n        <Link to={'/profile'}>\n          <div>\n            <img alt=\"\" src={'/edit-profile.png'} />\n            Profile\n          </div>\n        </Link>\n        <Link onClick={scrollLeft} to={'/messenger'}>\n          <div>\n            <img alt=\"\" src={'/messages.png'} />\n            Chat\n            <div className=\"notify\"></div>\n          </div>\n        </Link>\n      </div>\n    </SideNavStyle>\n  );\n};\n\nexport default SideNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socket } from './Login';\n\nlet Logout = props => {\n  let dispatch = useDispatch();\n  let userID = useSelector(state => state.userInfo.email);\n  let logoutHandler = async () => {\n    socket.emit('logout', userID);\n    socket.disconnect();\n    let data = new FormData();\n    data.append('userID', userID);\n    let responseBody = await fetch('/logout', { method: 'POST', body: data });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({ type: 'logout', content: userID });\n    }\n  };\n  return (\n    <Link to=\"/\" onClick={logoutHandler}>\n      Logout\n    </Link>\n  );\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Logout from './../Home/Logout.jsx';\nimport Login from '../Home/Login.jsx';\nimport Register from '../Home/Register.jsx';\nimport styled from 'styled-components';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from '../../data.js';\nlet SidePop = styled.div`\n  transition: ease-in-out 0.5s;\n  position: absolute;\n  top: ${TOP_BAR_HEIGHT}px;\n  height: 100vh;\n  box-sizing: border-box;\n  @media screen and (min-width: 500px) {\n    width: 400px;\n    right: ${props => (props.propsDisplay === 'flex' ? '0' : '-400px')};\n  }\n  @media screen and (max-width: 500px) {\n    width: 100vw;\n    right: ${props => (props.propsDisplay === 'flex' ? '0' : '-100vw')};\n  }\n  background-color: white;\n`;\nlet Nav = styled.div`\n  box-sizing: border-box;\n  position: fixed;\n  display: ${props => (!props.videoChatMode ? 'block' : 'none')};\n  top: 0;\n  left: 0;\n  height: ${TOP_BAR_HEIGHT}px;\n  width: 100%;\n  border-bottom: solid 1px lightgrey;\n  @media screen and (max-width: 500px) {\n    padding: 0 ${SIDE_BAR_WIDTH / 2}px;\n  }\n  @media screen and (min-width: 500px) {\n    padding: 0 ${SIDE_BAR_WIDTH}px;\n  }\n  z-index: 1000;\n  background-color: white;\n  .divContainer {\n    width: 100%;\n    height: 100%;\n    display: ${props => (!props.videoChatMode ? 'flex' : 'none')};\n    color: rgb(0, 56, 70);\n    justify-content: space-between;\n    align-items: center;\n    .rightLinks {\n      display: flex;\n    }\n  }\n`;\nlet Click = styled.div`\n  margin-left: 1em;\n  &:hover {\n    cursor: pointer;\n    color: purple;\n    text-decoration: underline;\n  }\n`;\nlet Exit = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 30px;\n  width: 30px;\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nlet Outer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\nlet Navbar = () => {\n  let loggedIn = useSelector(state => state.login);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let fname = useSelector(state => state.userInfo.fname);\n  let [loginDisplay, setLoginDisplay] = useState('none');\n  let [registerDisplay, setRegisterDisplay] = useState('none');\n  useEffect(() => {\n    if (loggedIn) {\n      toggleBoth();\n    }\n  }, [loggedIn]);\n  let toggleBoth = () => {\n    setLoginDisplay('none');\n    setRegisterDisplay('none');\n  };\n  let toggleLogin = () => {\n    if (loginDisplay === 'flex') {\n      setLoginDisplay('none');\n    } else {\n      setLoginDisplay('flex');\n      setRegisterDisplay('none');\n    }\n  };\n  let toggleRegister = () => {\n    if (registerDisplay === 'flex') {\n      setRegisterDisplay('none');\n    } else {\n      setRegisterDisplay('flex');\n      setLoginDisplay('none');\n    }\n  };\n  if (loggedIn) {\n    return (\n      <Nav videoChatMode={videoChatMode}>\n        <div className=\"divContainer\">\n          <div>Hi {fname}</div>\n          <div>\n            <Logout />\n          </div>\n        </div>\n      </Nav>\n    );\n  } else {\n    return (\n      <Nav>\n        <div className=\"divContainer\">\n          <div>Welcome</div>\n          <div className=\"rightLinks\">\n            <Click onClick={toggleLogin}>Login</Click>\n            <SidePop propsDisplay={loginDisplay}>\n              <Outer>\n                <Exit onClick={toggleBoth}>x</Exit>\n                <Login />\n              </Outer>\n            </SidePop>\n            <Click onClick={toggleRegister}>Register</Click>\n            <SidePop propsDisplay={registerDisplay}>\n              <Outer>\n                <Exit onClick={toggleBoth}>x</Exit>\n                <Register />\n              </Outer>\n            </SidePop>\n          </div>\n        </div>\n      </Nav>\n    );\n  }\n};\nexport default Navbar;\n","//Librairies\nimport React, { useEffect, useRef } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socket } from './Components/Home/Login.jsx';\n//Compononents\nimport Messenger from './Components/Messenger/Messenger.jsx';\nimport VideoChat from './Components/Video/VideoChat.jsx';\nimport Profile from './Components/Profile/Profile.jsx';\nimport OtherProfile from './Components/Profile/OtherProfile.jsx';\nimport Discover from './Components/Active/Discover.jsx';\nimport Home from './Components/Home/Home.jsx';\nimport Login from './Components/Home/Login.jsx';\nimport Register from './Components/Home/Register.jsx';\nimport SideNav from './Components/Navbar/SideNav.jsx';\nimport TopNav from './Components/Navbar/TopNav.jsx';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from './data.js';\n\nlet Container = styled.div``;\nlet MainContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  min-width: 300px;\n  width: 100vw;\n`;\nlet Main = styled.div`\n  box-sizing: border-box;\n  padding-top: ${props => (props.videoChatMode ? '0' : TOP_BAR_HEIGHT + 'px')};\n  overflow: scroll;\n  @media screen and (max-width: 500px) {\n    padding-bottom: ${props =>\n      props.videoChatMode || !props.loggedIn ? '0' : SIDE_BAR_WIDTH + 'px'};\n  }\n  @media screen and (min-width: 500px) {\n    padding-left: ${props =>\n      props.videoChatMode || !props.loggedIn ? '0' : SIDE_BAR_WIDTH + 'px'};\n  }\n  width: 100%;\n  height: 100%;\n`;\nlet App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let mainRef = useRef();\n  let me = useSelector(state => state.userInfo.email);\n  let videoChatInvite = useSelector(state => state.videoChatInvite);\n  let login = useSelector(state => state.login);\n  let conversations = useSelector(state => state.conversations);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let convosRef = useRef();\n  let meRef = useRef();\n  meRef.current = me;\n  convosRef.current = conversations;\n  let peers = useSelector(state => state.peers);\n  let peersRef = useRef();\n  peersRef.current = peers;\n  //Listening for events\n  useEffect(() => {\n    let getMessageFunction = (\n      convoID,\n      sender,\n      content,\n      time,\n      users,\n      arrayOfUsersInfo\n    ) => {\n      if (!convosRef.current[convoID]) {\n        let newConvo = {\n          convoID: convoID,\n          messages: [],\n          members: users\n        };\n        dispatch({\n          type: 'new-convo',\n          content: {\n            convoID: convoID,\n            convo: newConvo,\n            arrayOfMemberInfo: arrayOfUsersInfo\n          }\n        });\n      }\n      dispatch({\n        type: 'get-message',\n        content: { sender, content, time, convoID }\n      });\n    };\n    socket.on('active login', userInfo => {\n      dispatch({ type: 'active-login', content: userInfo });\n    });\n    socket.on('active logout', userID => {\n      dispatch({ type: 'active-logout', content: userID });\n    });\n    socket.on('send convo', (convoID, convo, arrayOfMemberInfo) => {\n      dispatch({\n        type: 'new-convo',\n        content: { convoID, convo, arrayOfMemberInfo }\n      });\n    });\n    socket.on(\n      'get message',\n      (convoID, sender, content, time, users, arrayOfUsersInfo) => {\n        getMessageFunction(\n          convoID,\n          sender,\n          content,\n          time,\n          users,\n          arrayOfUsersInfo\n        );\n      }\n    );\n    socket.on('active-user-edit', userInfo => {\n      if (userInfo.email !== me) {\n        dispatch({\n          type: 'update-active-user',\n          content: { userID: userInfo.email, userInfo: userInfo }\n        });\n      }\n    });\n    socket.on('new convo', (convoID, convo, arrayOfMemberInfo) => {\n      dispatch({\n        type: 'new-convo',\n        content: { convoID, convo, arrayOfMemberInfo }\n      });\n    });\n    socket.on('video-chat-initiator', initiator => {\n      dispatch({ type: 'video-chat-initiator', content: { initiator } });\n    });\n    socket.on('video-chat-start-invite', convoID => {\n      dispatch({\n        type: 'video-chat-start-invite',\n        content: { convoID }\n      });\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    if (videoChatInvite.start) {\n      if (window.confirm('join videoChat?')) {\n        history.push('/video-chat/' + videoChatInvite.convoID);\n      } else {\n        socket.emit('video-chat-decline', videoChatInvite.convoID, me);\n      }\n      dispatch({ type: 'reset-chat-start-invite' });\n    }\n  }, [videoChatInvite, me, dispatch, history]);\n\n  let renderHome = () => {\n    return <Home />;\n  };\n  let renderMessenger = renderData => {\n    if (mainRef.current) {\n      mainRef.current.scroll({\n        left: mainRef.current.scrollWidth,\n        right: 0,\n        behavior: 'smooth'\n      });\n    }\n    return <Messenger convoID={renderData.match.params.mid} />;\n  };\n  let renderVideoChat = renderData => {\n    return <VideoChat convoID={renderData.match.params.mid} />;\n  };\n  let renderMainMessenger = () => {\n    if (mainRef.current) {\n      mainRef.current.scroll({\n        left: 0,\n        right: 0\n      });\n    }\n    return <Messenger />;\n  };\n  let renderProfile = () => {\n    return <Profile />;\n  };\n  let renderViewProfile = renderData => {\n    return <OtherProfile userID={renderData.match.params.userID} />;\n  };\n  let renderDiscover = () => {\n    return <Discover />;\n  };\n  let renderLogin = () => {\n    return <Login />;\n  };\n  let renderRegister = () => {\n    return <Register />;\n  };\n\n  useEffect(() => {\n    let checkCookies = async () => {\n      let responseBody = await fetch('/check-cookies', { method: 'POST' });\n      let responseText = await responseBody.text();\n      let response = JSON.parse(responseText);\n      if (response.success) {\n        socket.connect();\n        socket.emit('reload', response.userInfo);\n        dispatch({\n          type: 'login',\n          content: {\n            userInfo: response.userInfo,\n            activeUsers: response.activeUsers,\n            convoList: response.convoList,\n            convoUsers: response.convoUsers\n          }\n        });\n      }\n    };\n    if (!login) {\n      checkCookies();\n    }\n  }, [login, dispatch]);\n  return (\n    <Container loggedIn={login}>\n      <TopNav />\n      <MainContainer messenger={window.location.href.includes('messenger')}>\n        <SideNav />\n        <Main videoChatMode={videoChatMode} loggedIn={login} ref={mainRef}>\n          <Route exact={true} path=\"/\" render={renderHome} />\n          <Route\n            exact={true}\n            path=\"/video-chat/:mid\"\n            render={renderData => renderVideoChat(renderData)}\n          />\n          <Route\n            exact={true}\n            path=\"/messenger/:mid\"\n            render={renderData => renderMessenger(renderData)}\n          />\n          <Route\n            exact={true}\n            path=\"/messenger\"\n            render={() => renderMainMessenger()}\n          />\n          <Route exact={true} path=\"/profile\" render={() => renderProfile()} />\n          <Route\n            exact={true}\n            path=\"/view-profile/:userID\"\n            render={renderData => renderViewProfile(renderData)}\n          />\n          <Route exact={true} path=\"/active-users\" render={renderDiscover} />\n          <Route exact={true} path=\"/login\" render={renderLogin} />\n          <Route exact={true} path=\"/register\" render={renderRegister} />\n        </Main>\n      </MainContainer>\n    </Container>\n  );\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport produce from 'immer';\n\nlet initialState = {\n  login: false,\n  userInfo: {}, // fname,email,description,type,image\n  conversations: {}, // convoID:{members,messages}, members=[userID,..], messages=[{content,sender,time},..]\n  activeUsers: {}, // userID:{fname,image,description}\n  convoList: {}, // convoID:{label,members}\n  convoUsers: {}, // userID :{userInformation} <--used in ConvoList\n  currentConvo: '',\n  notifications: {}, //{userID:boolean}\n  otherUserInfo: {}, //where other profiles are saved, after retrieving them from database\n  videoChatMode: false, //if a video chat is open, do not display navbars\n  videoChatInitiator: '', //\n  videoChatInvite: { start: false, convoID: '' },\n  peers: {}\n};\n\nlet reducer = (state, action) => {\n  const newState = produce(state, newState => {\n    switch (action.type) {\n      case 'edit-profile':\n        newState.userInfo.fname = action.content.fname;\n        newState.userInfo.lname = action.content.lname;\n        newState.userInfo.description = action.content.description;\n        break;\n      case 'videoChatMode':\n        newState.videoChatMode = action.content;\n        break;\n      case 'video-chat-start-invite':\n        newState.videoChatInvite = {\n          start: true,\n          convoID: action.content.convoID\n        };\n        break;\n      case 'update-active-user':\n        newState.activeUsers[action.content.userID] = action.content.userInfo;\n        break;\n      case 'video-chat-initiator':\n        newState.videoChatInitiator = action.content.initiator;\n        break;\n      case 'reset-chat-start-invite':\n        newState.videoChatInvite = { start: false, convoID: '' };\n        newState.videoChatInitiator = '';\n        break;\n      case 'set-peer':\n        newState.peers[action.content.user] = action.content.data;\n        break;\n      case 'destroy-peers':\n        newState.peers = {};\n        break;\n      case 'login':\n        newState.login = true;\n        newState.userInfo = action.content.userInfo;\n        newState.activeUsers = action.content.activeUsers;\n        newState.convoList = action.content.convoList;\n        newState.convoUsers = action.content.convoUsers;\n        Object.keys(action.content.convoList).forEach(convoID => {\n          newState.conversations[convoID] = { messages: [], members: [] };\n        });\n        break;\n      case 'edit-profile-img':\n        newState.userInfo.imgSrc = action.content.imgSrc;\n        break;\n      case 'set-current-convo':\n        newState.currentConvo = action.content;\n        break;\n      case 'new-convo':\n        let ac = action.content;\n        let label;\n        if (ac.convo.members[0] !== state.userInfo.email) {\n          label = ac.convo.members[0];\n        } else {\n          label = ac.convo.members[1];\n        }\n        newState.notifications[label] = true;\n        newState.conversations[ac.convoID] = ac.convo;\n        newState.convoList[ac.convoID] = {\n          label: label,\n          members: ac.convo.members\n        };\n\n        ac.arrayOfMemberInfo.forEach(member => {\n          if (member.info !== state.userInfo.email) {\n            newState.convoUsers[member.email] = member;\n          }\n        });\n\n        break;\n      case 'active-login':\n        newState.activeUsers[action.content.email] = action.content;\n        break;\n      case 'remove-notification':\n        newState.notifications[action.content] = false;\n        break;\n      case 'active-logout':\n        delete newState.activeUsers[action.content];\n        break;\n      case 'get-message':\n        newState.conversations[action.content.convoID].messages.push({\n          sender: action.content.sender,\n          content: action.content.content,\n          time: action.content.time\n        });\n        newState.notifications[action.content.sender] = true;\n        break;\n      case 'add-profile':\n        newState.otherUserInfo[action.content._id] = action.content;\n        break;\n      case 'logout':\n        return initialState;\n      default:\n        return state;\n    }\n  });\n  return newState;\n};\n\nlet store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\nexport { reducer };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\nimport './main.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}