{"version":3,"sources":["Components/Home/FormStyle.jsx","Components/Home/Login.jsx","Components/Messenger/MsgDisplay.jsx","Components/Messenger/SearchBarStyle.jsx","Components/Messenger/ConvoList.jsx","Components/Messenger/MsgDetail.jsx","Components/Messenger/MsgInputStyle.jsx","Components/Messenger/MsgInput.jsx","Components/Messenger/Messenger.jsx","Components/Video/VideoChatStyles.jsx","Components/Video/Popup.jsx","Components/Video/VideoChat.jsx","Components/Profile/profileStyle.jsx","Components/Profile/Profile.jsx","Components/Profile/OtherProfile.jsx","Components/Active/ActiveUsers.jsx","Components/Home/Home.jsx","Components/Home/Register.jsx","Components/Navbar/SideNav.jsx","data.js","Components/Home/Logout.jsx","Components/Navbar/TopNav.jsx","App.jsx","store.js","index.js"],"names":["Title","styled","div","Form","form","E","socket","io","window","location","origin","autoConnect","Login","history","useHistory","dispatch","useDispatch","useState","email","emailChange","pw","pwChange","errorMessage","errChange","submitHandler","evt","a","preventDefault","data","FormData","append","fetch","method","body","responseBody","text","responseText","response","JSON","parse","success","type","content","userInfo","activeUsers","convoList","convoUsers","connect","emit","push","onSubmit","htmlFor","id","required","autoComplete","value","onChange","target","MsgDisplayStyle","Container","props","me","TextBubble","Sender","notYet","TimeStyle","DayStyle","MsgDisplay","containerRef","useRef","convoID","convo","useSelector","state","conversations","myID","useEffect","current","scrollTo","scrollHeight","ref","messages","map","msg","index","sender","time","day","Date","getDay","timeBefore","senderBefore","dayBefore","timeDistance","key","toDateString","toLocaleTimeString","hour","hour12","minute","alt","src","imgSrc","MyInfo","ListStyle","active","notify","ConvoList","loggedIn","login","currentConvo","fname","lname","activeMembers","notifications","filter","setFilter","className","to","style","textDecoration","placeholder","Object","keys","userID","label","name","toUpperCase","includes","onClick","getConvo","VideoChat","MsgDetail","thisConvoID","members","otherMembers","user","_id","MsgInputStyle","MsgInput","formRef","msgContent","setMsgContent","rows","onKeyDown","keyCode","Div","MsgView","Messenger","LilVid","size","VideoChatPage","PopupStyle","show","Popup","setShow","setTimeout","person","activeUsersRef","meRef","peers","videoChatInitiator","lilVidSize","setlilVidSize","setContent","setPerson","myStream","setMyStream","otherStream","setOtherStream","peer","setPeer","navigator","mediaDevices","getUserMedia","video","audio","then","stream","Peer","initiator","trickle","on","stringify","offerData","offerer","answerer","signal","decliner","autoPlay","muted","vid","srcObject","confirm","getTracks","val","stop","off","destroy","Form1","displayInfo","Cancel","disapear","Info","Img1","img","Img2","EditPencil","BackgroundImg","ProfileImg","Profile","fnameChange","lnameChange","description","descriptionChange","hoverImg","hoverImgChange","displayInfoChange","hoverImgDisapear","hoverImgDisapearChange","profileSubmit","imgSubmit","files","console","log","onMouseEnter","onMouseLeave","ProfileImg2","Button","OtherProfile","chatSrcImg","changeChatSrcImg","otherUserInfo","myInfo","startConvo","users","forEach","new","H1","h1","ActiveUserStyle","ActiveUsers","viewProfile","Home","Register","confirmPw","confirmPwChange","errMsg","errMsgChange","SideNavStyle","logggedIn","videoChatMode","SideNav","useLocation","setNotify","values","some","x","pathname","slice","width","Logout","logoutHandler","disconnect","Nav","Navbar","MainContainer","Main","TOP_BAR_HEIGHT","SIDE_BAR_WIDTH","App","videoChatInvite","convosRef","arrayOfMemberInfo","arrayOfUsersInfo","getMessageFunction","start","checkCookies","TopNav","exact","path","render","renderData","match","params","mid","renderVideoChat","renderMessenger","renderViewProfile","initialState","store","createStore","action","produce","newState","ac","member","info","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2618b1b8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n//Styling\nlet Title = styled.div`\n  text-align: left;\n  padding: 1em 0;\n  h1 {\n    font-weight: lighter;\n    font-size: 1.5em;\n    color: rgb(0, 57, 70);\n  }\n`;\n\nconst Form = styled.form`\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n  margin: 1em 2em;\n  background-color: white;\n  padding: 1em;\n  width: 350px;\n  box-sizing: border-box;\n  position: fixed;\n  right: 0;\n  border-radius: 0;\n  height: 100%;\n  margin: 0;\n  & > * {\n    width: 100%;\n  }\n  .row {\n    flex-direction: row;\n    justify-content: space-between;\n    & > div {\n      width: 47%;\n    }\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin: 0.5em 0;\n    & > * {\n      margin: 0.1em 0;\n      &:focus {\n        outline: none;\n      }\n    }\n    input {\n      font-size: 0.75em;\n      padding: 0.75em;\n      border: 1px solid lightgrey;\n      &:hover {\n        border: 1px solid rgb(234, 171, 0);\n      }\n      &:focus {\n        background-color: rgb(250, 242, 232);\n        border: 1px solid rgb(234, 171, 0);\n      }\n    }\n    label {\n      font-size: 0.5em;\n    }\n  }\n  button {\n    background-color: rgb(234, 171, 0);\n    border: none;\n    color: rgb(0, 57, 70);\n    font-size: 0.75em;\n    padding: 0.8em;\n    margin: 1.5em 0;\n    &:focus {\n      outline: none;\n      background-color: lightgrey;\n    }\n    &:hover {\n      background-color: lightgrey;\n      cursor: pointer;\n    }\n  }\n`;\n\nlet E = styled.div`\n  color: red;\n  font-size: 0.75em;\n`;\n\nexport default Form;\nexport { Title, E };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Form, { Title, E } from './FormStyle.jsx';\nimport io from 'socket.io-client';\nconst socket = io(window.location.origin, {\n  autoConnect: false\n});\n\nlet Login = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, emailChange] = useState('');\n  const [pw, pwChange] = useState('');\n  const [errorMessage, errChange] = useState('');\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    let data = new FormData();\n    data.append('email', email);\n    data.append('pw', pw);\n    let responseBody = await fetch('/login', { method: 'POST', body: data });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({\n        type: 'login',\n        content: {\n          userInfo: response.userInfo,\n          activeUsers: response.activeUsers,\n          convoList: response.convoList,\n          convoUsers: response.convoUsers\n        }\n      });\n      socket.connect();\n      socket.emit('login', response.userInfo);\n      history.push('/');\n    } else {\n      errChange(response.errorMessage);\n    }\n  };\n  return (\n    <Form onSubmit={submitHandler}>\n      <Title>\n        <h1>Sign in</h1>\n      </Title>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          required\n          autoComplete=\"on\"\n          value={email}\n          onChange={evt => {\n            emailChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"pw\">Password</label>\n        <input\n          type=\"password\"\n          id=\"pw\"\n          required\n          autoComplete=\"off\"\n          value={pw}\n          onChange={evt => {\n            pwChange(evt.target.value);\n          }}\n        />\n      </div>\n\n      <button>Sign in</button>\n      <E>{errorMessage}</E>\n    </Form>\n  );\n};\n\nexport default Login;\nexport { socket };\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nlet MsgDisplayStyle = styled.div`\n  overflow: scroll;\n  padding: 00.5em;\n`;\nlet Container = styled.div`\n  text-align: ${props => (props.me ? 'right ' : 'left')};\n  align-content: ${props => (props.me ? 'right ' : 'left')};\n`;\nlet TextBubble = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: ${props => (props.me ? 'flex-end' : 'flex-start')};\n  div {\n    background-color: ${props => (props.me ? 'lightgrey' : 'purple')};\n    color: ${props => (props.me ? 'black' : 'white')};\n    padding: 1em;\n    width: max-content;\n    min-width: 25px;\n    max-width: 75%;\n    border-radius: ${props =>\n      props.me ? '1.5em 1.5em 0 1.5em' : '1.5em 1.5em 1.5em 0'};\n    text-align: left;\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    margin-left: 2.5em;\n  }\n`;\nlet Sender = styled.div`\n  position: relative;\n  img {\n    display: ${props => (props.me || props.notYet ? 'none' : 'block')};\n    position: absolute;\n    top: 1em;\n    left: 0;\n    height: 2em;\n    width: 2em;\n    border-radius: 50%;\n    object-fit: cover;\n    margin-right: 1em;\n  }\n`;\n\nlet TimeStyle = styled.div`\n  color: grey;\n  text-align: center;\n  display: ${props => (props.notYet ? 'none' : 'block')};\n`;\nlet DayStyle = styled(TimeStyle)`\n  padding: 1em 0;\n`;\nlet MsgDisplay = props => {\n  let containerRef = useRef();\n  let convoID = props.convoID;\n  let convo = useSelector(state => state.conversations[convoID]);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let myID = useSelector(state => state.userInfo.email);\n  useEffect(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollTo(0, containerRef.current.scrollHeight);\n    }\n  }, [convo]);\n  if (!convo) {\n    return <div></div>;\n  }\n  return (\n    <MsgDisplayStyle ref={containerRef}>\n      {convo.messages.map((msg, index) => {\n        let me = myID === msg.sender;\n        let notYet = { time: true, day: true, sender: true };\n        let time = new Date(msg.time);\n        let day = time.getDay();\n        let timeBefore =\n          index === 0 ? 0 : new Date(convo.messages[index - 1].time);\n        let senderBefore = index === 0 ? 0 : convo.messages[index - 1].sender;\n        let dayBefore = index === 0 ? 0 : timeBefore.getDay();\n        let timeDistance = time - timeBefore;\n        if (senderBefore !== msg.sender || timeDistance > 600000) {\n          notYet.sender = false;\n        }\n        if (timeDistance > 600000) {\n          notYet.time = false;\n        }\n        if (day - dayBefore >= 1) {\n          notYet.day = false;\n        }\n        return (\n          <Container me={me} key={index}>\n            <DayStyle notYet={notYet.day}>{time.toDateString()}</DayStyle>\n            <TimeStyle notYet={notYet.time}>\n              {time.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                hour12: true,\n                minute: 'numeric'\n              })}\n            </TimeStyle>\n            <div>\n              <Sender me={me} notYet={notYet.sender}>\n                <img\n                  alt=\"\"\n                  src={\n                    convoUsers[msg.sender] && convoUsers[msg.sender].imgSrc\n                      ? convoUsers[msg.sender].imgSrc\n                      : '/default-profile-pic.png'\n                  }\n                />\n\n                <TextBubble me={me}>\n                  <div>{msg.content}</div>\n                </TextBubble>\n              </Sender>\n            </div>\n          </Container>\n        );\n      })}\n    </MsgDisplayStyle>\n  );\n};\n\nexport default MsgDisplay;\n","import styled from 'styled-components';\n\nlet Form = styled.form`\n  border: solid lightgrey 1px;\n  border-radius: 2em;\n  padding: 0.25em 1em;\n  display: grid;\n  grid-template-columns: 1fr 1em;\n  input {\n    border: none;\n    font-size: 0.75em;\n    &:focus {\n      outline: 0;\n    }\n  }\n  button {\n    border: none;\n    padding: 0;\n    img {\n      width: 100%;\n    }\n    &:focus {\n      outline: 0;\n    }\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Form from './SearchBarStyle.jsx';\nlet MyInfo = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  padding: 0.5em;\n  color: black;\n  img {\n    height: 4em;\n    width: 4em;\n    border-radius: 50%;\n    margin-right: 0.5em;\n    object-fit: cover;\n  }\n`;\nlet Container = styled.div`\n  box-sizing: border-box;\n  padding: 0.5em;\n  .box {\n    box-sizing: border-box;\n    background-color: white;\n    height: 100%;\n    border-radius: 0.5em;\n    padding: 0.5em;\n    display: flex;\n    flex-direction: column;\n    h2 {\n      font-size: 1em;\n    }\n    a {\n      width: 100%;\n      display: block;\n    }\n    .list-convos {\n      overflow: scroll;\n    }\n  }\n  .search {\n    padding: 0;\n    padding-bottom: 1em;\n  }\n`;\n//SearchBar is a functional component that takes as props a function.\n//This function is called on submission of the form.\nlet ListStyle = styled.div`\n  div {\n    border-radius: 1em;\n    background-color: ${props =>\n      props.current ? 'rgb(240, 240, 240)' : 'transparent'};\n    color: ${props => (props.current ? 'rgb(120, 120, 120)' : 'black')};\n    display: flex;\n    align-items: center;\n    padding: 0 1em;\n    position: relative;\n    p {\n      background-color: transparent;\n    }\n    &:hover {\n      cursor: pointer;\n      background-color: rgb(250, 250, 250);\n    }\n    img {\n      border: 2px solid;\n      border-color: ${props => (props.active ? 'lightgreen' : 'lightgrey')};\n      height: 2em;\n      width: 2em;\n      border-radius: 50%;\n      margin-right: 1em;\n      object-fit: cover;\n    }\n    .notification {\n      position: absolute;\n      top: 10px;\n      right: 0px;\n      height: ${props => (props.notify ? '10px' : '0')};\n      width: ${props => (props.notify ? '10px' : '0')};\n      border-radius: 50%;\n      background-color: ${props => (props.notify ? 'purple' : 'transparent')};\n      margin: 0;\n      padding: 0;\n      transition: height ease-in-out 0.2s, width ease-in-out 0.2s;\n    }\n  }\n`;\n\nlet ConvoList = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let convoList = useSelector(state => state.convoList);\n  let loggedIn = useSelector(state => state.login);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let currentConvo = useSelector(state => state.currentConvo);\n  let imgSrc = useSelector(state => state.userInfo.imgSrc);\n  let fname = useSelector(state => state.userInfo.fname);\n  let lname = useSelector(state => state.userInfo.lname);\n  let activeMembers = useSelector(state => state.activeUsers);\n  let notifications = useSelector(state => state.notifications);\n  let [filter, setFilter] = useState('');\n  let onSubmit = evt => {\n    evt.preventDefault();\n    setFilter('');\n  };\n  let onChange = evt => {\n    setFilter(evt.target.value);\n  };\n  let getConvo = (convoID, userID) => {\n    dispatch({ type: 'set-current-convo', content: convoID });\n    dispatch({ type: 'remove-notification', content: userID });\n    history.push('/messenger/' + convoID);\n  };\n  if (!convoList) {\n    return <div></div>;\n  }\n  return (\n    <Container loggedIn={loggedIn}>\n      <div className=\"box\">\n        <Link to={'/profile'} style={{ textDecoration: 'none' }}>\n          <MyInfo>\n            <img alt=\"\" src={imgSrc ? imgSrc : '/default-profile-pic.png'} />\n            <div>\n              {fname} {lname}\n            </div>\n          </MyInfo>\n        </Link>\n        <h2>Conversations</h2>\n        <div className=\"search\">\n          <Form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              onChange={onChange}\n              placeholder={'Search convos...'}\n            />\n            <button>\n              <img alt=\"search-icon\" src={'/search.png'} />\n            </button>\n          </Form>\n        </div>\n        <div className=\"list-convos\">\n          {Object.keys(convoList).map((convoID, index) => {\n            let userID = convoList[convoID].label;\n            let name = convoUsers[userID].fname;\n            let imgSrc = convoUsers[userID].imgSrc;\n            if (notifications[userID] && currentConvo === convoID) {\n              dispatch({ type: 'remove-notification', content: userID });\n            }\n            if (\n              !filter === '' ||\n              name.toUpperCase().includes(filter.toUpperCase())\n            ) {\n              return (\n                <div key={'ConvoList' + index}>\n                  <ListStyle\n                    current={currentConvo === convoID}\n                    onClick={() => getConvo(convoID, userID)}\n                    notify={notifications[userID]}\n                    active={activeMembers[userID]}\n                  >\n                    <div>\n                      <img\n                        alt=\"\"\n                        src={imgSrc ? imgSrc : '/default-profile-pic.png'}\n                      />\n                      <p>{name}</p>\n                      <div className=\"notification\"></div>\n                    </div>\n                  </ListStyle>\n                </div>\n              );\n            }\n            return <div key={'ConvoList' + index}></div>;\n          })}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default ConvoList;\nexport { ListStyle };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { ListStyle } from './ConvoList.jsx';\nimport { Link } from 'react-router-dom';\n\nlet Container = styled.div`\n  background-color: white;\n  border-bottom: lightgrey 1px solid;\n  overflow: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .search {\n    padding: 0;\n    padding-right: 1em;\n  }\n`;\nlet VideoChat = styled.div`\n  display: ${props => (props.active ? 'block' : 'none')};\n  height: 100%;\n  padding: 0;\n  padding-right: 1em;\n  a {\n    img {\n      height: 80%;\n    }\n  }\n`;\n\nlet MsgDetail = props => {\n  let thisConvoID = props.convoID;\n  let me = useSelector(state => state.userInfo.email);\n  let convoList = useSelector(state => state.convoList);\n  let convoUsers = useSelector(state => state.convoUsers);\n  let members = convoList[thisConvoID] ? convoList[thisConvoID].members : [];\n  let activeUsers = useSelector(state => state.activeUsers);\n  let otherMembers = members.filter(user => {\n    return user !== me;\n  });\n  if (!convoList) {\n    return <div></div>;\n  }\n\n  return (\n    <Container>\n      {otherMembers.map((user, index) => {\n        let name = convoUsers[user].fname;\n        let imgSrc = convoUsers[user].imgSrc;\n        return (\n          <ListStyle key={index}>\n            <Link to={'/view-profile/' + convoUsers[user]._id}>\n              <div>\n                <img\n                  alt=\"\"\n                  src={imgSrc ? imgSrc : '/default-profile-pic.png'}\n                />\n                <p>{name}</p>\n              </div>\n            </Link>\n          </ListStyle>\n        );\n      })}\n      <VideoChat active={activeUsers ? activeUsers[otherMembers[0]] : false}>\n        <Link to={'/video-chat/' + props.convoID}>\n          <img alt=\"video-chat\" src={'/video-chat.png'} />\n        </Link>\n      </VideoChat>\n    </Container>\n  );\n};\n\nexport default MsgDetail;\n","import styled from 'styled-components';\n\nlet MsgInputStyle = styled.form`\n  /* box-sizing: border-box; */\n  width: 100%;\n  display: flex;\n  border-top: solid 1px lightgrey;\n  padding: 0.5em 0;\n  align-items: center;\n  background-color: white;\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 3.5em;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n  img {\n    height: 2em;\n    margin: 0.5em;\n  }\n  button {\n    background-color: transparent;\n    border: none;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n  textarea {\n    display: flex;\n    width: 100%;\n    height: auto;\n    padding: 1em 1.5em;\n    border-radius: 2em;\n    background-color: rgb(242, 242, 242);\n    border: none;\n    resize: none;\n    &:focus {\n      outline: 0;\n    }\n  }\n`;\n\nexport { MsgInputStyle };\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { socket } from './../Home/Login';\nimport { MsgInputStyle } from './MsgInputStyle.jsx';\n\nlet MsgInput = props => {\n  let formRef = useRef();\n  let convoID = props.convoID;\n  let [msgContent, setMsgContent] = useState('');\n  let user = useSelector(state => state.userInfo.email);\n  let convo = useSelector(state => state.conversations[convoID]);\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    socket.emit('new message', user, msgContent, convoID, convo.members);\n    setMsgContent('');\n    return;\n  };\n\n  let onChangeHandler = evt => {\n    setMsgContent(evt.target.value);\n    return;\n  };\n  let onEnterSubmit = evt => {\n    if (evt.keyCode === 13) {\n      submitHandler(evt);\n    }\n  };\n  return (\n    <MsgInputStyle onSubmit={submitHandler} ref={formRef}>\n      <textarea\n        rows=\"1\"\n        type=\"text\"\n        value={msgContent}\n        onChange={onChangeHandler}\n        onKeyDown={onEnterSubmit}\n        placeholder=\"Type a message...\"\n      />\n      <button>\n        <img alt=\"send\" src={'/send-button.png'} />\n      </button>\n    </MsgInputStyle>\n  );\n};\n\nexport default MsgInput;\n","import React, { useEffect } from 'react';\nimport MsgDisplay from './MsgDisplay.jsx';\nimport MsgDetail from './MsgDetail.jsx';\nimport MsgInput from './MsgInput.jsx';\nimport { socket } from './../Home/Login';\nimport styled from 'styled-components';\nimport ConvoList from './ConvoList.jsx';\n\nlet Div = styled.div`\n  display: flex;\n  height: 93vh;\n`;\nlet MsgView = styled.div`\n  background-color: white;\n  border-radius: 1em;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: 50px 1fr;\n`;\n\nlet Messenger = props => {\n  let thisConvoID = props.convoID;\n  useEffect(() => {\n    if (thisConvoID) {\n      socket.emit('getConvo', thisConvoID);\n    }\n  }, [thisConvoID]);\n\n  if (!props.convoID) {\n    return (\n      <Div>\n        <ConvoList />\n        <MsgView>\n          <h1>Start chatting</h1>\n        </MsgView>\n      </Div>\n    );\n  }\n  return (\n    <Div>\n      <ConvoList />\n      <MsgView>\n        <MsgDetail convoID={thisConvoID} />\n        <MsgDisplay convoID={thisConvoID} />\n        <MsgInput convoID={thisConvoID} />\n      </MsgView>\n    </Div>\n  );\n};\n\nexport default Messenger;\n","import styled from 'styled-components';\nlet LilVid = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 3;\n  width: ${props =>\n    props.size === 'big'\n      ? '400px'\n      : props.size === 'medium'\n      ? '200px'\n      : '100px'};\n  height: ${props =>\n    props.size === 'big'\n      ? '200px'\n      : props.size === 'medium'\n      ? '100px'\n      : '50px'};\n  transition: ease-in-out 0.3s;\n  &:hover {\n    cursor: pointer;\n  }\n  min-width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  video {\n    width: 100%;\n  }\n`;\nlet VideoChatPage = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  .streams {\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    .big-vid {\n      z-index: 2;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      video {\n        width: 100%;\n        max-width: 800px;\n      }\n    }\n  }\n  .options {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 4em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    img {\n      height: 90%;\n      transition: ease-in 0.1s;\n      &:hover {\n        cursor: pointer;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default VideoChatPage;\nexport { LilVid };\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nlet PopupStyle = styled.div`\n  height: 100vh;\n  width: 100vw;\n  z-index: 10000;\n  color: black;\n  border: red;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: ${props => (props.show ? 'flex' : 'none')};\n  justify-content: center;\n  align-items: center;\n  h1 {\n    background-color: rgba(300, 300, 300, 0.5);\n    padding: 1em;\n    border-radius: 1em;\n    font-size: 1em;\n    font-weight: lighter;\n  }\n`;\nlet Popup = props => {\n  let [show, setShow] = useState(true);\n  useEffect(() => {\n    setShow(true);\n    setTimeout(() => setShow(false), 2000);\n  }, [props.content]);\n  return (\n    <PopupStyle show={show}>\n      <h1>\n        {props.person}\n        {props.content}\n      </h1>\n    </PopupStyle>\n  );\n};\nexport default Popup;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { socket } from '../Home/Login.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport VideoChatPage, { LilVid } from './VideoChatStyles.jsx';\nimport Popup from './Popup.jsx';\nimport Peer from 'simple-peer'; //each client is a peer, you will create a new instance of a peer\n\nlet VideoChat = props => {\n  let dispatch = useDispatch();\n  let history = useHistory();\n  let convoID = props.convoID;\n  let me = useSelector(state => state.userInfo.email);\n  let activeUsers = useSelector(state => state.activeUsers);\n  let activeUsersRef = useRef();\n  activeUsersRef.current = activeUsers;\n  let meRef = useRef();\n  meRef.current = me;\n  let peers = useSelector(state => state.peers);\n  let peersRef = useRef();\n  peersRef.current = peers;\n  let videoChatInitiator = useSelector(state => state.videoChatInitiator);\n  let [lilVidSize, setlilVidSize] = useState('medium');\n  let [content, setContent] = useState('Welcome');\n  let [person, setPerson] = useState('');\n  let [show, setShow] = useState(false);\n  let [myStream, setMyStream] = useState(false);\n  let [otherStream, setOtherStream] = useState(false);\n  let [peer, setPeer] = useState(false);\n\n  useEffect(() => {\n    if (convoID && me) {\n      dispatch({ type: 'videoChatMode', content: true }); //to hide navbars\n      socket.emit('video-chat-start', convoID, me);\n    }\n  }, [convoID, dispatch, me]);\n  useEffect(() => {\n    if (videoChatInitiator && convoID && me) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then(stream => {\n          //webRTC connection\n          let peer = new Peer({\n            initiator: videoChatInitiator === meRef.current ? true : false,\n            trickle: false,\n            stream: stream\n          });\n          //initiator calls function, others only call function on signal\n          peer.on('signal', data => {\n            dispatch({\n              type: 'set-peer',\n              content: { data: JSON.stringify(data), user: me }\n            });\n            socket.emit('offer', data, me, convoID);\n          });\n          peer.on('stream', stream => {\n            // set stream of other user\n            setOtherStream(stream);\n          });\n          //get stream\n          setMyStream(stream);\n          let offerBack = (offerData, offerer, answerer, convoID) => {\n            dispatch({\n              type: 'set-peer',\n              content: { data: JSON.stringify(offerData), user: offerer }\n            });\n            peer.signal(offerData);\n          };\n          socket.on('offerBack', offerBack);\n          setPeer(peer);\n        });\n    }\n  }, [videoChatInitiator, convoID, me, dispatch]);\n  useEffect(() => {\n    socket.on('video-chat-decline-back', (convoID, decliner) => {\n      setContent(' has declined invite.');\n      setPerson(activeUsersRef.current[decliner].fname);\n      setShow(true);\n    });\n  }, []);\n\n  let endCall = () => {\n    let end = window.confirm('You are about to leave video chat!');\n    if (end) {\n      dispatch({ type: 'videoChatMode', content: false });\n      socket.emit('video-chat-leave', convoID, me);\n      history.push('/messenger/' + convoID);\n      if (myStream) {\n        myStream.getTracks().map(val => {\n          return val.stop();\n        });\n      }\n      socket.off('offerBack');\n      if (peer) {\n        peer.destroy();\n      }\n      dispatch({ type: 'destroy-peers' });\n    }\n  };\n  let changelilVidSize = () => {\n    if (lilVidSize === 'medium') {\n      setlilVidSize('big');\n    }\n    if (lilVidSize === 'small') {\n      setlilVidSize('medium');\n    }\n    if (lilVidSize === 'big') {\n      setlilVidSize('small');\n    }\n  };\n  return (\n    <VideoChatPage>\n      <div className=\"streams\">\n        <div className=\"big-vid\">\n          <video\n            key={'othervid'}\n            autoPlay\n            muted\n            ref={vid => {\n              if (!otherStream || !vid) return;\n              vid.srcObject = otherStream;\n            }}\n          />\n        </div>\n        <LilVid size={lilVidSize} onClick={changelilVidSize}>\n          <video\n            key={'myvid'}\n            autoPlay\n            muted\n            ref={vid => {\n              if (!myStream || !vid) return;\n              vid.srcObject = myStream;\n            }}\n          />\n        </LilVid>\n      </div>\n      <div className=\"options\">\n        <img src=\"/end-call.png\" onClick={endCall} alt=\"end-video-chat-icon\" />\n      </div>\n      <Popup show={show} content={content} person={person} />\n    </VideoChatPage>\n  );\n};\nexport default VideoChat;\n","import styled from 'styled-components';\nimport Form from '../Home/FormStyle.jsx';\nlet Form1 = styled(Form)`\n  position: absolute;\n  background-color: transparent;\n  top: 300px;\n  left: 50px;\n  height: min-content;\n  padding-bottom: 0;\n  display: ${props => (props.displayInfo === 'form' ? 'block' : 'none')};\n`;\nlet Cancel = styled.div`\n  display: ${props => (props.disapear ? 'block' : 'none')};\n  position: absolute;\n  top: 40px;\n  right: 20px;\n  text-align: right;\n  color: rgb(1, 57, 59);\n  &:hover {\n    cursor: pointer;\n    color: purple;\n    text-decoration: underline;\n  }\n`;\nlet Info = styled.div`\n  position: absolute;\n  top: 300px;\n  left: 50px;\n  display: ${props => (props.displayInfo === 'info' ? 'block' : 'none')};\n`;\nlet Img1 = styled.img`\n  display: ${props => (props.img === 1 && !props.disapear ? 'block' : 'none')};\n`;\nlet Img2 = styled.img`\n  display: ${props => (props.img === 2 && !props.disapear ? 'block' : 'none')};\n`;\nlet EditPencil = styled.div`\n  position: absolute;\n  height: 30px;\n  width: 30px;\n  top: 250px;\n  right: 50px;\n  &:hover {\n    cursor: ${props => (props.disapear ? 'default' : 'pointer')};\n  }\n  img {\n    height: 100%;\n    width: 100%;\n  }\n`;\nlet Container = styled.div`\n  position: relative;\n  background-color: white;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 2em;\n  height: 100%;\n  width: 100%;\n  max-width: 800px;\n`;\nlet BackgroundImg = styled.div`\n  position: absolute;\n  top: 0;\n  .container {\n    width: 100%;\n    height: 230px;\n    img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nlet ProfileImg = styled.label`\n  position: absolute;\n  top: 120px;\n  left: 50px;\n  .container {\n    position: relative;\n    height: 180px;\n    width: 180px;\n    &:hover {\n      cursor: pointer;\n      div {\n        display: flex;\n      }\n    }\n    input {\n      display: none;\n    }\n    img {\n      height: 100%;\n      width: 100%;\n      border-radius: 50%;\n      object-fit: cover;\n      border: 5px white solid;\n    }\n    div {\n      border-radius: 50%;\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      display: none;\n      color: white;\n      justify-content: center;\n      align-items: center;\n      background-color: rgba(0, 0, 0, 0.5);\n      border: white solid 5px;\n    }\n  }\n`;\nexport {\n  ProfileImg,\n  BackgroundImg,\n  Container,\n  EditPencil,\n  Img2,\n  Img1,\n  Info,\n  Cancel,\n  Form1\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  ProfileImg,\n  BackgroundImg,\n  Container,\n  EditPencil,\n  Img2,\n  Img1,\n  Info,\n  Cancel,\n  Form1\n} from './profileStyle.jsx';\n\nlet Profile = () => {\n  let dispatch = useDispatch();\n  let userInfo = useSelector(state => state.userInfo);\n  const [fname, fnameChange] = useState('');\n  const [lname, lnameChange] = useState('');\n  const [email, emailChange] = useState('');\n  const [description, descriptionChange] = useState('');\n  const [hoverImg, hoverImgChange] = useState(2);\n  const [displayInfo, displayInfoChange] = useState('info');\n  const [hoverImgDisapear, hoverImgDisapearChange] = useState(false);\n  useEffect(() => {\n    fnameChange(userInfo.fname);\n    lnameChange(userInfo.lname);\n    emailChange(userInfo.email);\n    descriptionChange(userInfo.description);\n  }, [userInfo]);\n  let profileSubmit = async evt => {\n    evt.preventDefault();\n    let data = new FormData();\n    data.append('description', description);\n    data.append('fname', fname);\n    data.append('lname', lname);\n    data.append('userID', email);\n    let responseBody = await fetch('/edit-profile', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({\n        type: 'edit-profile',\n        content: {\n          fname: fname,\n          lname: lname,\n          description: description\n        }\n      });\n      displayInfoChange('info');\n      hoverImgDisapearChange(false);\n    }\n  };\n  let imgSubmit = async evt => {\n    let data = new FormData();\n    data.append('imgSrc', evt.target.files[0]);\n    data.append('userID', userInfo.email);\n    let responseBody = await fetch('/edit-profile-img', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({\n        type: 'edit-profile-img',\n        content: {\n          imgSrc: response.imgSrc\n        }\n      });\n    } else {\n      console.log('ERROR - session not valid');\n    }\n  };\n  if (!userInfo) {\n    return <div>loading</div>;\n  }\n  return (\n    <Container>\n      <BackgroundImg>\n        <div className=\"container\">\n          <img alt=\"profile-img\" src={'/background.jpg'} />\n        </div>\n      </BackgroundImg>\n      <ProfileImg>\n        <div className=\"container\">\n          <img\n            alt=\"profile-img\"\n            src={userInfo.imgSrc ? userInfo.imgSrc : '/default-profile-pic.png'}\n          />\n          <div>Edit Image</div>\n          <input\n            type=\"file\"\n            onChange={evt => {\n              imgSubmit(evt);\n            }}\n          />\n        </div>\n      </ProfileImg>\n      <Info displayInfo={displayInfo}>\n        <h2>\n          {userInfo.fname} {userInfo.lname}\n        </h2>\n        <p>{userInfo.description}</p>\n      </Info>\n      <Form1 onSubmit={profileSubmit} displayInfo={displayInfo}>\n        <h1>Edit Profile</h1>\n        <div>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            value={fname}\n            onChange={evt => {\n              fnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Last Name</label>{' '}\n          <input\n            type=\"text\"\n            value={lname}\n            onChange={evt => {\n              lnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label>Description</label>\n          <input\n            type=\"text-area\"\n            value={description}\n            onChange={evt => {\n              descriptionChange(evt.target.value);\n            }}\n          />\n        </div>\n        <button>Make Changes</button>\n        <Cancel\n          onClick={() => {\n            displayInfoChange('info');\n            hoverImgDisapearChange(false);\n          }}\n          disapear={hoverImgDisapear}\n        >\n          Cancel\n        </Cancel>\n      </Form1>\n      <EditPencil\n        onMouseEnter={() => hoverImgChange(1)}\n        onMouseLeave={() => hoverImgChange(2)}\n        onClick={() => {\n          displayInfoChange('form');\n          hoverImgDisapearChange(true);\n        }}\n        disapear={hoverImgDisapear}\n      >\n        <Img1\n          alt=\"pencil-edit\"\n          src={'/pencil-edit.png'}\n          img={hoverImg}\n          disapear={hoverImgDisapear}\n        />\n        <Img2\n          alt=\"pencil-edit2\"\n          src={'/pencil-edit2.png'}\n          img={hoverImg}\n          disapear={hoverImgDisapear}\n        />\n      </EditPencil>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ProfileImg, BackgroundImg, Container, Info } from './profileStyle.jsx';\nimport styled from 'styled-components';\nimport { socket } from './../Home/Login';\nlet ProfileImg2 = styled(ProfileImg)`\n  .container {\n    &:hover {\n      cursor: default;\n    }\n  }\n`;\nlet Button = styled.div`\n  color: rgb(33, 125, 183);\n  position: absolute;\n  display: flex;\n  align-items: center;\n  right: 50px;\n  top: 250px;\n  border: 1px solid transparent;\n  &:hover {\n    cursor: pointer;\n    color: grey;\n  }\n  img {\n    height: 40px;\n    padding: 0.5em;\n  }\n`;\nlet OtherProfile = userID => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [chatSrcImg, changeChatSrcImg] = useState('/messages.png');\n  let otherUserInfo = useSelector(state => state.otherUserInfo[userID.userID]);\n  let myInfo = useSelector(state => state.userInfo);\n\n  let startConvo = async userID => {\n    let myID = myInfo.email;\n    let users = [userID, myID];\n    let data = new FormData();\n    users.forEach(user => data.append('users', user));\n    let responseBody = await fetch('/get-convoID', {\n      method: 'POST',\n      body: data\n    });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      if (response.new) {\n        socket.emit('startConvo', users, response.convoID);\n      }\n      dispatch({ type: 'set-current-convo', content: response.convoID });\n      history.push('/messenger/' + response.convoID);\n    }\n  };\n\n  useEffect(() => {\n    let data = new FormData();\n    data.append('userID', userID.userID);\n    fetch('/get-userInfo', { method: 'POST', body: data })\n      .then(responseBody => responseBody.text())\n      .then(responseText => JSON.parse(responseText))\n      .then(response => {\n        if (response.success) {\n          dispatch({ type: 'add-profile', content: response.userInfo });\n        }\n      });\n  }, [userID.userID, dispatch]);\n\n  if (!otherUserInfo) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Container>\n      <BackgroundImg>\n        <div className=\"container\">\n          <img alt=\"profile-img\" src={'/background.jpg'} />\n        </div>\n      </BackgroundImg>\n      <ProfileImg2>\n        <div className=\"container\">\n          <img\n            alt=\"profile-img\"\n            src={\n              otherUserInfo.imgSrc\n                ? otherUserInfo.imgSrc\n                : '/default-profile-pic.png'\n            }\n          />\n        </div>\n      </ProfileImg2>\n      <Info displayInfo={'info'}>\n        <h2>\n          {otherUserInfo.fname} {otherUserInfo.lname}\n        </h2>\n        <p>{otherUserInfo.description}</p>\n      </Info>\n      <Button\n        onMouseEnter={() => changeChatSrcImg('/messages-grey.png')}\n        onMouseLeave={() => changeChatSrcImg('/messages.png')}\n        onClick={() => startConvo(otherUserInfo.email)}\n      >\n        Chat\n        <img src={chatSrcImg} alt=\"start-chat-with-this-person-icon\" />\n      </Button>\n    </Container>\n  );\n};\n\nexport default OtherProfile;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nlet H1 = styled.h1`\n  margin-left: 0.5em;\n`;\nlet Container = styled.div`\n  overflow: scroll;\n`;\nlet ActiveUserStyle = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: white;\n  border-radius: 1em;\n  padding: 0.5em;\n  margin: 0.5em;\n  &:hover {\n    cursor: pointer;\n  }\n  img {\n    border-radius: 50%;\n    height: 3em;\n    width: 3em;\n    object-fit: cover;\n    margin-right: 0.5em;\n  }\n`;\nlet ActiveUsers = () => {\n  const history = useHistory();\n  let activeUsers = useSelector(state => state.activeUsers); // userID:{fname,image,description}\n  let me = useSelector(state => state.userInfo.email);\n  let viewProfile = async userID => {\n    history.push('/view-profile/' + activeUsers[userID]._id);\n  };\n  return (\n    <div>\n      <H1>Active Users</H1>\n      <Container>\n        {Object.keys(activeUsers).map((userID, index) => {\n          if (userID !== me) {\n            return (\n              <ActiveUserStyle\n                key={'active-user' + index}\n                onClick={() => viewProfile(userID)}\n              >\n                <img\n                  alt=\"\"\n                  src={\n                    activeUsers[userID].imgSrc\n                      ? activeUsers[userID].imgSrc\n                      : '/default-profile-pic.png'\n                  }\n                />\n                <div>{activeUsers[userID].fname}</div>\n              </ActiveUserStyle>\n            );\n          } else {\n            return <div key={'non-active-user' + index}></div>;\n          }\n        })}\n      </Container>\n    </div>\n  );\n};\n\nexport default ActiveUsers;\n","import React from 'react';\n\nlet Home = props => {\n  return <div></div>;\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Form, { Title, E } from './FormStyle.jsx';\nimport styled from 'styled-components';\nimport { socket } from './Login.jsx';\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nlet Register = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, emailChange] = useState('');\n  const [pw, pwChange] = useState('');\n  const [confirmPw, confirmPwChange] = useState('');\n  const [errMsg, errMsgChange] = useState('');\n  const [fname, fnameChange] = useState('');\n  const [lname, lnameChange] = useState('');\n\n  let submitHandler = async evt => {\n    evt.preventDefault();\n    errMsgChange('');\n    if (confirmPw !== pw) {\n      errMsgChange(\"Passwords don't match!\");\n      return;\n    } else {\n      let data = new FormData();\n      data.append('email', email);\n      data.append('pw', pw);\n      data.append('fname', fname);\n      data.append('lname', lname);\n      let responseBody = await fetch('/register', {\n        method: 'POST',\n        body: data\n      });\n      let responseText = await responseBody.text();\n      let response = JSON.parse(responseText);\n      if (response.success) {\n        emailChange('');\n        pwChange('');\n        confirmPwChange('');\n        fnameChange('');\n        lnameChange('');\n        dispatch({\n          type: 'login',\n          content: {\n            userInfo: response.userInfo,\n            activeUsers: response.activeUsers,\n            convoList: response.convoList,\n            convoUsers: response.convoUsers\n          }\n        });\n        socket.connect();\n        socket.emit('login', response.userInfo);\n        history.push('/');\n      } else {\n        errMsgChange(response.errorMessage);\n      }\n    }\n  };\n  return (\n    <Form onSubmit={submitHandler}>\n      <Title>\n        <h1>Register</h1>\n      </Title>\n      <div className=\"row\">\n        <div>\n          <label htmlFor=\"fname\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"fname\"\n            required\n            autoComplete=\"on\"\n            value={fname}\n            onChange={evt => {\n              fnameChange(evt.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"lname\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lname\"\n            required\n            autoComplete=\"on\"\n            value={lname}\n            onChange={evt => {\n              lnameChange(evt.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          required\n          autoComplete=\"on\"\n          value={email}\n          onChange={evt => {\n            emailChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"pw\">Password</label>\n        <input\n          type=\"password\"\n          id=\"pw\"\n          required\n          autoComplete=\"off\"\n          value={pw}\n          onChange={evt => {\n            pwChange(evt.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"confirmPw\">Confirm password</label>\n        <input\n          type=\"password\"\n          id=\"confirmPw\"\n          required\n          autoComplete=\"off\"\n          value={confirmPw}\n          onChange={evt => {\n            confirmPwChange(evt.target.value);\n          }}\n        />\n      </div>\n\n      <button>Create account</button>\n      <E>{errMsg}</E>\n    </Form>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from '../../data.js';\n\nlet SideNavStyle = styled.div`\n  display: ${props =>\n    props.logggedIn && !props.videoChatMode ? 'block' : 'none'};\n  z-index: 100;\n  background-color: rgb(100, 100, 100);\n  position: fixed;\n  left: 0;\n  top: ${TOP_BAR_HEIGHT}px;\n  height: 100%;\n  .notify {\n    position: absolute;\n    top: 10px;\n    right: 1em;\n    height: ${props => (props.notify ? '10px' : '0')};\n    width: ${props => (props.notify ? '10px' : '0')};\n    border-radius: 50%;\n    background-color: ${props => (props.notify ? 'purple' : 'transparent')};\n    margin: 0;\n    padding: 0;\n    transition: height ease-in-out 0.2s, width ease-in-out 0.2s;\n  }\n  & > div {\n    width: ${SIDE_BAR_WIDTH}px;\n    text-align: center;\n    a {\n      font-size: 0.7em;\n      text-decoration: none;\n      color: white;\n      height: min-content;\n    }\n\n    div {\n      box-sizing: border-box;\n      padding: 1em;\n      margin-bottom: 2em;\n      position: relative;\n      &:hover {\n        padding: 0.5em;\n      }\n      img {\n        width: 70%;\n      }\n    }\n  }\n`;\n\nlet SideNav = () => {\n  let location = useLocation();\n  let loggedIn = useSelector(state => state.login);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let notifications = useSelector(state => state.notifications);\n  let [notify, setNotify] = useState(false);\n  useEffect(() => {\n    if (\n      Object.values(notifications).some(x => x === true) &&\n      location.pathname.slice(0, 10) !== '/messenger'\n    ) {\n      setNotify(true);\n    } else {\n      setNotify(false);\n    }\n  }, [notifications, location.pathname]);\n  return (\n    <SideNavStyle\n      logggedIn={loggedIn}\n      videoChatMode={videoChatMode}\n      notify={notify}\n    >\n      <div>\n        <Link to=\"/active-users\">\n          <div>\n            <img alt=\"\" src={'/find-users.png'} style={{ width: '100%' }} />\n            Discover\n          </div>\n        </Link>\n        <Link to={'/profile'}>\n          <div>\n            <img alt=\"\" src={'/edit-profile.png'} />\n            Profile\n          </div>\n        </Link>\n        <Link to={'/messenger'}>\n          <div>\n            <img alt=\"\" src={'/messages.png'} />\n            Chat\n            <div className=\"notify\"></div>\n          </div>\n        </Link>\n      </div>\n    </SideNavStyle>\n  );\n};\n\nexport default SideNav;\n","const SIDE_BAR_WIDTH = 80;\nconst TOP_BAR_HEIGHT = 50;\nconst CONVO_BAR_WIDTH = 200;\nconst BG_COLOR = 'rgb(240,240,240)';\nexport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT, CONVO_BAR_WIDTH, BG_COLOR };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socket } from './Login';\n\nlet Logout = props => {\n  let dispatch = useDispatch();\n  let userID = useSelector(state => state.userInfo.email);\n  let logoutHandler = async () => {\n    socket.emit('logout', userID);\n    socket.disconnect();\n    let data = new FormData();\n    data.append('userID', userID);\n    let responseBody = await fetch('/logout', { method: 'POST', body: data });\n    let responseText = await responseBody.text();\n    let response = JSON.parse(responseText);\n    if (response.success) {\n      dispatch({ type: 'logout', content: userID });\n    }\n  };\n  return (\n    <Link to=\"/\" onClick={logoutHandler}>\n      Logout\n    </Link>\n  );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Logout from './../Home/Logout.jsx';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from '../../data.js';\n\nlet Nav = styled.div`\nbox-sizing:border-box;\nposition:fixed;\ndisplay:${props => (!props.videoChatMode ? 'block' : 'none')};\ntop:0;\nheight: ${TOP_BAR_HEIGHT}px;\nwidth: 100%;\nborder-bottom: solid 1px lightgrey;\npadding: 0 ${SIDE_BAR_WIDTH}px;\nz-index: 1000;\nbackground-color: white;\ndiv{\n  width:100%;\n  height:100%;\n  display: ${props => (!props.videoChatMode ? 'flex' : 'none')};\n  color: rgb(0, 56, 70);\n  \n  justify-content: space-between;\n  align-items: center;\n  &>div{width:max-content;}\n  a{margin-left:2em;}}\n  }\n}\n`;\nlet Navbar = () => {\n  let loggedIn = useSelector(state => state.login);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let fname = useSelector(state => state.userInfo.fname);\n  if (loggedIn) {\n    return (\n      <Nav videoChatMode={videoChatMode}>\n        <div>\n          <div>Hi {fname}</div>\n          <div>\n            <Logout />\n          </div>\n        </div>\n      </Nav>\n    );\n  } else {\n    return (\n      <Nav>\n        <div>\n          <div>Welcome</div>\n          <div>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n          </div>\n        </div>\n      </Nav>\n    );\n  }\n};\nexport default Navbar;\n","//Librairies\nimport React, { useEffect, useRef } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socket } from './Components/Home/Login.jsx';\n//Compononents\nimport Messenger from './Components/Messenger/Messenger.jsx';\nimport VideoChat from './Components/Video/VideoChat.jsx';\nimport Profile from './Components/Profile/Profile.jsx';\nimport OtherProfile from './Components/Profile/OtherProfile.jsx';\nimport ActiveUsers from './Components/Active/ActiveUsers.jsx';\nimport Home from './Components/Home/Home.jsx';\nimport Login from './Components/Home/Login.jsx';\nimport Register from './Components/Home/Register.jsx';\nimport SideNav from './Components/Navbar/SideNav.jsx';\nimport TopNav from './Components/Navbar/TopNav.jsx';\nimport { SIDE_BAR_WIDTH, TOP_BAR_HEIGHT } from './data.js';\n\nlet Container = styled.div``;\nlet MainContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n`;\nlet Main = styled.div`\n  box-sizing: border-box;\n  padding-top: ${props => (props.videoChatMode ? '0' : TOP_BAR_HEIGHT + 'px')};\n  padding-left: ${props => (props.videoChatMode ? '0' : SIDE_BAR_WIDTH + 'px')};\n  width: 100%;\n  height: 100%;\n`;\nlet App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let me = useSelector(state => state.userInfo.email);\n  let videoChatInvite = useSelector(state => state.videoChatInvite);\n  let login = useSelector(state => state.login);\n  let conversations = useSelector(state => state.conversations);\n  let videoChatMode = useSelector(state => state.videoChatMode);\n  let convosRef = useRef();\n  let meRef = useRef();\n  meRef.current = me;\n  convosRef.current = conversations;\n  let peers = useSelector(state => state.peers);\n  let peersRef = useRef();\n  peersRef.current = peers;\n  //Listening for events\n  useEffect(() => {\n    let getMessageFunction = (\n      convoID,\n      sender,\n      content,\n      time,\n      users,\n      arrayOfUsersInfo\n    ) => {\n      if (!convosRef.current[convoID]) {\n        let newConvo = {\n          convoID: convoID,\n          messages: [],\n          members: users\n        };\n        dispatch({\n          type: 'new-convo',\n          content: {\n            convoID: convoID,\n            convo: newConvo,\n            arrayOfMemberInfo: arrayOfUsersInfo\n          }\n        });\n      }\n      dispatch({\n        type: 'get-message',\n        content: { sender, content, time, convoID }\n      });\n    };\n    socket.on('active login', userInfo => {\n      dispatch({ type: 'active-login', content: userInfo });\n    });\n    socket.on('active logout', userID => {\n      dispatch({ type: 'active-logout', content: userID });\n    });\n    socket.on('send convo', (convoID, convo, arrayOfMemberInfo) => {\n      dispatch({\n        type: 'new-convo',\n        content: { convoID, convo, arrayOfMemberInfo }\n      });\n    });\n    socket.on(\n      'get message',\n      (convoID, sender, content, time, users, arrayOfUsersInfo) => {\n        getMessageFunction(\n          convoID,\n          sender,\n          content,\n          time,\n          users,\n          arrayOfUsersInfo\n        );\n      }\n    );\n    socket.on('new convo', (convoID, convo, arrayOfMemberInfo) => {\n      dispatch({\n        type: 'new-convo',\n        content: { convoID, convo, arrayOfMemberInfo }\n      });\n    });\n    socket.on('video-chat-initiator', initiator => {\n      dispatch({ type: 'video-chat-initiator', content: { initiator } });\n    });\n    socket.on('video-chat-start-invite', convoID => {\n      dispatch({\n        type: 'video-chat-start-invite',\n        content: { convoID }\n      });\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    if (videoChatInvite.start) {\n      if (window.confirm('join videoChat?')) {\n        history.push('/video-chat/' + videoChatInvite.convoID);\n      } else {\n        socket.emit('video-chat-decline', videoChatInvite.convoID, me);\n      }\n      dispatch({ type: 'reset-chat-start-invite' });\n    }\n  }, [videoChatInvite, me, dispatch, history]);\n\n  let renderHome = () => {\n    return <Home />;\n  };\n  let renderMessenger = renderData => {\n    return <Messenger convoID={renderData.match.params.mid} />;\n  };\n  let renderVideoChat = renderData => {\n    return <VideoChat convoID={renderData.match.params.mid} />;\n  };\n  let renderMainMessenger = () => {\n    return <Messenger />;\n  };\n  let renderProfile = () => {\n    return <Profile />;\n  };\n  let renderViewProfile = renderData => {\n    return <OtherProfile userID={renderData.match.params.userID} />;\n  };\n  let renderActiveUsers = () => {\n    return <ActiveUsers />;\n  };\n  let renderLogin = () => {\n    return <Login />;\n  };\n  let renderRegister = () => {\n    return <Register />;\n  };\n\n  useEffect(() => {\n    let checkCookies = async () => {\n      let responseBody = await fetch('/check-cookies', { method: 'POST' });\n      let responseText = await responseBody.text();\n      let response = JSON.parse(responseText);\n      if (response.success) {\n        socket.connect();\n        socket.emit('reload', response.userInfo);\n        dispatch({\n          type: 'login',\n          content: {\n            userInfo: response.userInfo,\n            activeUsers: response.activeUsers,\n            convoList: response.convoList,\n            convoUsers: response.convoUsers\n          }\n        });\n      }\n    };\n    if (!login) {\n      checkCookies();\n    }\n  }, [login, dispatch]);\n  return (\n    <Container loggedIn={login}>\n      <TopNav />\n      <MainContainer>\n        <SideNav />\n        <Main videoChatMode={videoChatMode}>\n          <Route exact={true} path=\"/\" render={renderHome} />\n          <Route\n            exact={true}\n            path=\"/video-chat/:mid\"\n            render={renderData => renderVideoChat(renderData)}\n          />\n          <Route\n            exact={true}\n            path=\"/messenger/:mid\"\n            render={renderData => renderMessenger(renderData)}\n          />\n          <Route\n            exact={true}\n            path=\"/messenger\"\n            render={() => renderMainMessenger()}\n          />\n          <Route exact={true} path=\"/profile\" render={() => renderProfile()} />\n          <Route\n            exact={true}\n            path=\"/view-profile/:userID\"\n            render={renderData => renderViewProfile(renderData)}\n          />\n          <Route exact={true} path=\"/active-users\" render={renderActiveUsers} />\n          <Route exact={true} path=\"/login\" render={renderLogin} />\n          <Route exact={true} path=\"/register\" render={renderRegister} />\n        </Main>\n      </MainContainer>\n    </Container>\n  );\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport produce from 'immer';\n\nlet initialState = {\n  login: false,\n  userInfo: {}, // fname,email,description,type,image\n  conversations: {}, // convoID:{members,messages}, members=[userID,..], messages=[{content,sender,time},..]\n  activeUsers: {}, // userID:{fname,image,description}\n  convoList: {}, // convoID:{label,members}\n  convoUsers: {}, // userID :{userInformation} <--used in ConvoList\n  currentConvo: '',\n  notifications: {}, //{userID:boolean}\n  otherUserInfo: {}, //where other profiles are saved, after retrieving them from database\n  videoChatMode: false, //if a video chat is open, do not display navbars\n  videoChatInitiator: '', //\n  videoChatInvite: { start: false, convoID: '' },\n  peers: {}\n};\n\nlet reducer = (state, action) => {\n  const newState = produce(state, newState => {\n    switch (action.type) {\n      case 'edit-profile':\n        newState.userInfo.fname = action.content.fname;\n        newState.userInfo.lname = action.content.lname;\n        newState.userInfo.description = action.content.description;\n        break;\n      case 'videoChatMode':\n        newState.videoChatMode = action.content;\n        break;\n      case 'video-chat-start-invite':\n        newState.videoChatInvite = {\n          start: true,\n          convoID: action.content.convoID\n        };\n        break;\n      case 'video-chat-initiator':\n        newState.videoChatInitiator = action.content.initiator;\n        break;\n      case 'reset-chat-start-invite':\n        newState.videoChatInvite = { start: false, convoID: '' };\n        newState.videoChatInitiator = '';\n        break;\n      case 'set-peer':\n        newState.peers[action.content.user] = action.content.data;\n        break;\n      case 'destroy-peers':\n        newState.peers = {};\n        break;\n      case 'login':\n        newState.login = true;\n        newState.userInfo = action.content.userInfo;\n        newState.activeUsers = action.content.activeUsers;\n        newState.convoList = action.content.convoList;\n        newState.convoUsers = action.content.convoUsers;\n        Object.keys(action.content.convoList).forEach(convoID => {\n          newState.conversations[convoID] = { messages: [], members: [] };\n        });\n        break;\n      case 'edit-profile-img':\n        newState.userInfo.imgSrc = action.content.imgSrc;\n        break;\n      case 'set-current-convo':\n        newState.currentConvo = action.content;\n        break;\n      case 'new-convo':\n        let ac = action.content;\n        let label;\n        if (ac.convo.members[0] !== state.userInfo.email) {\n          label = ac.convo.members[0];\n        } else {\n          label = ac.convo.members[1];\n        }\n        newState.notifications[label] = true;\n        newState.conversations[ac.convoID] = ac.convo;\n        newState.convoList[ac.convoID] = {\n          label: label,\n          members: ac.convo.members\n        };\n\n        ac.arrayOfMemberInfo.forEach(member => {\n          if (member.info !== state.userInfo.email) {\n            newState.convoUsers[member.email] = member;\n          }\n        });\n\n        break;\n      case 'active-login':\n        newState.activeUsers[action.content.email] = action.content;\n        break;\n      case 'remove-notification':\n        newState.notifications[action.content] = false;\n        break;\n      case 'active-logout':\n        delete newState.activeUsers[action.content];\n        break;\n      case 'get-message':\n        newState.conversations[action.content.convoID].messages.push({\n          sender: action.content.sender,\n          content: action.content.content,\n          time: action.content.time\n        });\n        newState.notifications[action.content.sender] = true;\n        break;\n      case 'add-profile':\n        newState.otherUserInfo[action.content._id] = action.content;\n        break;\n      case 'logout':\n        return initialState;\n      default:\n        return state;\n    }\n  });\n  return newState;\n};\n\nlet store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\nexport { reducer };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\nimport './main.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}